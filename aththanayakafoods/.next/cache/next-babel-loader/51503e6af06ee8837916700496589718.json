{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gihanmadhuwantha\\\\Desktop\\\\system_Development\\\\AththanayakaFoods\\\\aththanayakafoods\\\\components\\\\paypalBtn.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { useEffect, useRef, useContext } from 'react';\nimport { patchData } from '../utils/fetchData';\nimport { DataContext } from '../store/GlobalState';\nimport { updateItem } from '../store/Actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst paypalBtn = ({\n  order\n}) => {\n  const refPaypalBtn = useRef();\n  const {\n    state,\n    dispatch\n  } = useContext(DataContext);\n  const {\n    auth,\n    orders\n  } = state;\n  useEffect(() => {\n    paypal.Buttons({\n      createOrder: function (data, actions) {\n        // This function sets up the details of the transaction, including the amount and line item details.\n        return actions.order.create({\n          purchase_units: [{\n            amount: {\n              value: order.total\n            }\n          }]\n        });\n      },\n      onApprove: function (data, actions) {\n        // This function captures the funds from the transaction.\n        dispatch({\n          type: 'NOTIFY',\n          payload: {\n            loading: true\n          }\n        });\n        return actions.order.capture().then(function (details) {\n          console();\n          patchData(`order/payment/${order._id}`, null, auth.token).then(res => {\n            if (res.err) return dispatch({\n              type: 'NOTIFY',\n              payload: {\n                error: res.err\n              }\n            });\n            dispatch(updateItem(orders, order._id, _objectSpread(_objectSpread({}, order), {}, {\n              dateOfPayment: new Date().toISOString(),\n              paid: true\n            }), 'ADD_ORDERS'));\n            return dispatch({\n              type: 'NOTIFY',\n              payload: {\n                success: res.msg\n              }\n            });\n          });\n          // This function shows a transaction success message to your buyer.\n        });\n      }\n    }).render(refPaypalBtn.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: refPaypalBtn\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\nexport default paypalBtn;","map":{"version":3,"names":["useEffect","useRef","useContext","patchData","DataContext","updateItem","paypalBtn","order","refPaypalBtn","state","dispatch","auth","orders","paypal","Buttons","createOrder","data","actions","create","purchase_units","amount","value","total","onApprove","type","payload","loading","capture","then","details","console","_id","token","res","err","error","dateOfPayment","Date","toISOString","paid","success","msg","render","current"],"sources":["C:/Users/gihanmadhuwantha/Desktop/system_Development/AththanayakaFoods/aththanayakafoods/components/paypalBtn.js"],"sourcesContent":["import { useEffect, useRef, useContext } from 'react'\r\nimport { patchData } from '../utils/fetchData'\r\nimport {DataContext} from '../store/GlobalState'\r\nimport {updateItem} from '../store/Actions'\r\n\r\nconst paypalBtn = ({order}) => {\r\n    const refPaypalBtn = useRef()\r\n    const {state, dispatch} = useContext(DataContext)\r\n    const { auth, orders} = state\r\n\r\n    useEffect(() => {\r\n        paypal.Buttons({\r\n            createOrder: function(data, actions) {\r\n              // This function sets up the details of the transaction, including the amount and line item details.\r\n              return actions.order.create({\r\n                purchase_units: [{\r\n                  amount: {\r\n                    value: order.total\r\n                  }\r\n                }]\r\n              });\r\n            },\r\n            onApprove: function(data, actions) {\r\n              // This function captures the funds from the transaction.\r\n              dispatch({ type: 'NOTIFY', payload: {loading: true} })\r\n\r\n              return actions.order.capture().then(function(details) {\r\n                console()\r\n                patchData(`order/payment/${order._id}`, null\r\n                 , auth.token)\r\n                .then(res => {\r\n                  if(res.err) return dispatch({ type: 'NOTIFY', payload: {error: res.err} })\r\n                 \r\n                  \r\n                  dispatch(updateItem(orders, order._id, {\r\n                    ...order, dateOfPayment:new Date().toISOString(),\r\n                    paid: true\r\n                  }, 'ADD_ORDERS'))\r\n\r\n                  return dispatch({ type: 'NOTIFY', payload: {success: res.msg} })\r\n                })\r\n                // This function shows a transaction success message to your buyer.\r\n              });\r\n            }\r\n        }).render(refPaypalBtn.current);\r\n    },[])\r\n\r\n    return(\r\n        <div ref={refPaypalBtn}></div>\r\n    )\r\n}\r\n\r\nexport default paypalBtn"],"mappings":";;;;;;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,UAAU,QAAQ,OAAO;AACrD,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAAQC,WAAW,QAAO,sBAAsB;AAChD,SAAQC,UAAU,QAAO,kBAAkB;AAAA;AAE3C,MAAMC,SAAS,GAAG,CAAC;EAACC;AAAK,CAAC,KAAK;EAC3B,MAAMC,YAAY,GAAGP,MAAM,EAAE;EAC7B,MAAM;IAACQ,KAAK;IAAEC;EAAQ,CAAC,GAAGR,UAAU,CAACE,WAAW,CAAC;EACjD,MAAM;IAAEO,IAAI;IAAEC;EAAM,CAAC,GAAGH,KAAK;EAE7BT,SAAS,CAAC,MAAM;IACZa,MAAM,CAACC,OAAO,CAAC;MACXC,WAAW,EAAE,UAASC,IAAI,EAAEC,OAAO,EAAE;QACnC;QACA,OAAOA,OAAO,CAACV,KAAK,CAACW,MAAM,CAAC;UAC1BC,cAAc,EAAE,CAAC;YACfC,MAAM,EAAE;cACNC,KAAK,EAAEd,KAAK,CAACe;YACf;UACF,CAAC;QACH,CAAC,CAAC;MACJ,CAAC;MACDC,SAAS,EAAE,UAASP,IAAI,EAAEC,OAAO,EAAE;QACjC;QACAP,QAAQ,CAAC;UAAEc,IAAI,EAAE,QAAQ;UAAEC,OAAO,EAAE;YAACC,OAAO,EAAE;UAAI;QAAE,CAAC,CAAC;QAEtD,OAAOT,OAAO,CAACV,KAAK,CAACoB,OAAO,EAAE,CAACC,IAAI,CAAC,UAASC,OAAO,EAAE;UACpDC,OAAO,EAAE;UACT3B,SAAS,CAAE,iBAAgBI,KAAK,CAACwB,GAAI,EAAC,EAAE,IAAI,EACzCpB,IAAI,CAACqB,KAAK,CAAC,CACbJ,IAAI,CAACK,GAAG,IAAI;YACX,IAAGA,GAAG,CAACC,GAAG,EAAE,OAAOxB,QAAQ,CAAC;cAAEc,IAAI,EAAE,QAAQ;cAAEC,OAAO,EAAE;gBAACU,KAAK,EAAEF,GAAG,CAACC;cAAG;YAAE,CAAC,CAAC;YAG1ExB,QAAQ,CAACL,UAAU,CAACO,MAAM,EAAEL,KAAK,CAACwB,GAAG,kCAChCxB,KAAK;cAAE6B,aAAa,EAAC,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;cAChDC,IAAI,EAAE;YAAI,IACT,YAAY,CAAC,CAAC;YAEjB,OAAO7B,QAAQ,CAAC;cAAEc,IAAI,EAAE,QAAQ;cAAEC,OAAO,EAAE;gBAACe,OAAO,EAAEP,GAAG,CAACQ;cAAG;YAAE,CAAC,CAAC;UAClE,CAAC,CAAC;UACF;QACF,CAAC,CAAC;MACJ;IACJ,CAAC,CAAC,CAACC,MAAM,CAAClC,YAAY,CAACmC,OAAO,CAAC;EACnC,CAAC,EAAC,EAAE,CAAC;EAEL,oBACI;IAAK,GAAG,EAAEnC;EAAa;IAAA;IAAA;IAAA;EAAA,QAAO;AAEtC,CAAC;AAED,eAAeF,SAAS"},"metadata":{},"sourceType":"module"}