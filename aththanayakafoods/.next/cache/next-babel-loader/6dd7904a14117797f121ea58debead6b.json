{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gihanmadhuwantha\\\\Desktop\\\\system_Development\\\\AththanayakaFoods\\\\aththanayakafoods\\\\pages\\\\paypalBtn.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { useEffect, useRef, useContext } from 'react';\nimport { postData } from '../utils/fetchData';\nimport { DataContext } from '../store/GlobalState';\nimport { updateItem } from '../store/Actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst paypalBtn = ({\n  total,\n  address,\n  mobile,\n  state,\n  dispatch\n}) => {\n  const refPaypalBtn = useRef();\n  const {\n    cart,\n    auth,\n    orders\n  } = state;\n  useEffect(() => {\n    paypal.Buttons({\n      createOrder: function (data, actions) {\n        // This function sets up the details of the transaction, including the amount and line item details.\n        return actions.order.create({\n          purchase_units: [{\n            amount: {\n              value: total\n            }\n          }]\n        });\n      },\n      onApprove: function (data, actions) {\n        // This function captures the funds from the transaction.\n        dispatch({\n          type: 'NOTIFY',\n          payload: {\n            loading: true\n          }\n        });\n        return actions.order.capture().then(function (details) {\n          postData('order', {\n            address,\n            mobile,\n            cart,\n            total\n          }, auth.token).then(res => {\n            if (res.err) return dispatch({\n              type: 'NOTIFY',\n              payload: {\n                error: res.err\n              }\n            });\n            dispatch({\n              type: 'ADD_CART',\n              payload: []\n            });\n            const newOrder = _objectSpread(_objectSpread({}, res.newOrder), {}, {\n              user: auth.user\n            });\n            dispatch({\n              type: 'ADD_ORDERS',\n              payload: [...orders, newOrder]\n            });\n            return dispatch({\n              type: 'NOTIFY',\n              payload: {\n                success: res.msg\n              }\n            });\n          });\n          //alert('Transaction Completed');\n        });\n      }\n    }).render(refPaypalBtn.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: refPaypalBtn\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\nexport default paypalBtn;","map":{"version":3,"names":["useEffect","useRef","useContext","postData","DataContext","updateItem","paypalBtn","total","address","mobile","state","dispatch","refPaypalBtn","cart","auth","orders","paypal","Buttons","createOrder","data","actions","order","create","purchase_units","amount","value","onApprove","type","payload","loading","capture","then","details","token","res","err","error","newOrder","user","success","msg","render","current"],"sources":["C:/Users/gihanmadhuwantha/Desktop/system_Development/AththanayakaFoods/aththanayakafoods/pages/paypalBtn.js"],"sourcesContent":["import { useEffect, useRef, useContext } from 'react'\r\nimport { postData } from '../utils/fetchData'\r\nimport {DataContext} from '../store/GlobalState'\r\nimport {updateItem} from '../store/Actions'\r\n\r\nconst paypalBtn = ({total,address,mobile,state,dispatch}) => {\r\n    const refPaypalBtn = useRef()\r\n    const{cart,auth,orders}=state\r\n    useEffect(() => {\r\n      paypal.Buttons({\r\n          createOrder: function(data, actions) {\r\n            // This function sets up the details of the transaction, including the amount and line item details.\r\n            return actions.order.create({\r\n              purchase_units: [{\r\n                amount: {\r\n                  value:total\r\n                }\r\n              }]\r\n            });\r\n          },\r\n          onApprove: function(data, actions) {\r\n            // This function captures the funds from the transaction.\r\n            dispatch({ type: 'NOTIFY', payload: {loading: true} })\r\n\r\n            return actions.order.capture().then(function(details) {\r\n\r\n             postData('order',{address,mobile,cart,total},auth.token)\r\n             .then(res=>{ if(res.err) return dispatch({ type: 'NOTIFY', payload: {error: res.err} }) \r\n             dispatch({type:'ADD_CART',payload:[]})\r\n             const newOrder ={\r\n              ...res.newOrder,\r\n              user:auth.user\r\n\r\n             }\r\n             dispatch({type:'ADD_ORDERS',payload:[...orders,newOrder]})\r\n             return dispatch({ type: 'NOTIFY', payload: {success: res.msg} })})\r\n             //alert('Transaction Completed');\r\n            });\r\n          }\r\n      }).render(refPaypalBtn.current);\r\n  },[])\r\n    return(\r\n        <div ref={refPaypalBtn}></div>\r\n    )\r\n    \r\n    }\r\nexport default paypalBtn "],"mappings":";;;;;;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,UAAU,QAAQ,OAAO;AACrD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAAQC,WAAW,QAAO,sBAAsB;AAChD,SAAQC,UAAU,QAAO,kBAAkB;AAAA;AAE3C,MAAMC,SAAS,GAAG,CAAC;EAACC,KAAK;EAACC,OAAO;EAACC,MAAM;EAACC,KAAK;EAACC;AAAQ,CAAC,KAAK;EACzD,MAAMC,YAAY,GAAGX,MAAM,EAAE;EAC7B,MAAK;IAACY,IAAI;IAACC,IAAI;IAACC;EAAM,CAAC,GAACL,KAAK;EAC7BV,SAAS,CAAC,MAAM;IACdgB,MAAM,CAACC,OAAO,CAAC;MACXC,WAAW,EAAE,UAASC,IAAI,EAAEC,OAAO,EAAE;QACnC;QACA,OAAOA,OAAO,CAACC,KAAK,CAACC,MAAM,CAAC;UAC1BC,cAAc,EAAE,CAAC;YACfC,MAAM,EAAE;cACNC,KAAK,EAAClB;YACR;UACF,CAAC;QACH,CAAC,CAAC;MACJ,CAAC;MACDmB,SAAS,EAAE,UAASP,IAAI,EAAEC,OAAO,EAAE;QACjC;QACAT,QAAQ,CAAC;UAAEgB,IAAI,EAAE,QAAQ;UAAEC,OAAO,EAAE;YAACC,OAAO,EAAE;UAAI;QAAE,CAAC,CAAC;QAEtD,OAAOT,OAAO,CAACC,KAAK,CAACS,OAAO,EAAE,CAACC,IAAI,CAAC,UAASC,OAAO,EAAE;UAErD7B,QAAQ,CAAC,OAAO,EAAC;YAACK,OAAO;YAACC,MAAM;YAACI,IAAI;YAACN;UAAK,CAAC,EAACO,IAAI,CAACmB,KAAK,CAAC,CACvDF,IAAI,CAACG,GAAG,IAAE;YAAE,IAAGA,GAAG,CAACC,GAAG,EAAE,OAAOxB,QAAQ,CAAC;cAAEgB,IAAI,EAAE,QAAQ;cAAEC,OAAO,EAAE;gBAACQ,KAAK,EAAEF,GAAG,CAACC;cAAG;YAAE,CAAC,CAAC;YACvFxB,QAAQ,CAAC;cAACgB,IAAI,EAAC,UAAU;cAACC,OAAO,EAAC;YAAE,CAAC,CAAC;YACtC,MAAMS,QAAQ,mCACVH,GAAG,CAACG,QAAQ;cACfC,IAAI,EAACxB,IAAI,CAACwB;YAAI,EAEd;YACD3B,QAAQ,CAAC;cAACgB,IAAI,EAAC,YAAY;cAACC,OAAO,EAAC,CAAC,GAAGb,MAAM,EAACsB,QAAQ;YAAC,CAAC,CAAC;YAC1D,OAAO1B,QAAQ,CAAC;cAAEgB,IAAI,EAAE,QAAQ;cAAEC,OAAO,EAAE;gBAACW,OAAO,EAAEL,GAAG,CAACM;cAAG;YAAE,CAAC,CAAC;UAAA,CAAC,CAAC;UAClE;QACD,CAAC,CAAC;MACJ;IACJ,CAAC,CAAC,CAACC,MAAM,CAAC7B,YAAY,CAAC8B,OAAO,CAAC;EACnC,CAAC,EAAC,EAAE,CAAC;EACH,oBACI;IAAK,GAAG,EAAE9B;EAAa;IAAA;IAAA;IAAA;EAAA,QAAO;AAGlC,CAAC;AACL,eAAeN,SAAS"},"metadata":{},"sourceType":"module"}