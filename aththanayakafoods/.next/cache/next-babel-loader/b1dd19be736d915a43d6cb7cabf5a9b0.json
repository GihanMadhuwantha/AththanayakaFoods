{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nexports.__esModule = true;\nexports.addLocale = addLocale;\nexports.delLocale = delLocale;\nexports.hasBasePath = hasBasePath;\nexports.addBasePath = addBasePath;\nexports.delBasePath = delBasePath;\nexports.isLocalURL = isLocalURL;\nexports.interpolateAs = interpolateAs;\nexports.resolveHref = resolveHref;\nexports.markLoadingError = markLoadingError;\nexports[\"default\"] = void 0;\nvar _normalizeTrailingSlash = require(\"../../../client/normalize-trailing-slash\");\nvar _denormalizePagePath = require(\"../../server/denormalize-page-path\");\nvar _mitt = _interopRequireDefault(require(\"../mitt\"));\nvar _utils = require(\"../utils\");\nvar _isDynamic = require(\"./utils/is-dynamic\");\nvar _parseRelativeUrl = require(\"./utils/parse-relative-url\");\nvar _querystring = require(\"./utils/querystring\");\nvar _resolveRewrites = _interopRequireDefault(require(\"./utils/resolve-rewrites\"));\nvar _routeMatcher = require(\"./utils/route-matcher\");\nvar _routeRegex = require(\"./utils/route-regex\");\nvar _escapePathDelimiters = _interopRequireDefault(require(\"./utils/escape-path-delimiters\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n} /* global __NEXT_DATA__ */ // tslint:disable:no-console\nvar basePath = process.env.__NEXT_ROUTER_BASEPATH || '';\nfunction buildCancellationError() {\n  return Object.assign(new Error('Route Cancelled'), {\n    cancelled: true\n  });\n}\nfunction addPathPrefix(path, prefix) {\n  return prefix && path.startsWith('/') ? path === '/' ? (0, _normalizeTrailingSlash.normalizePathTrailingSlash)(prefix) : \"\".concat(prefix).concat(path) : path;\n}\nfunction addLocale(path, locale, defaultLocale) {\n  if (process.env.__NEXT_I18N_SUPPORT) {\n    return locale && locale !== defaultLocale && !path.startsWith('/' + locale + '/') && path !== '/' + locale ? addPathPrefix(path, '/' + locale) : path;\n  }\n  return path;\n}\nfunction delLocale(path, locale) {\n  if (process.env.__NEXT_I18N_SUPPORT) {\n    return locale && (path.startsWith('/' + locale + '/') || path === '/' + locale) ? path.substr(locale.length + 1) || '/' : path;\n  }\n  return path;\n}\nfunction hasBasePath(path) {\n  return path === basePath || path.startsWith(basePath + '/');\n}\nfunction addBasePath(path) {\n  // we only add the basepath on relative urls\n  return addPathPrefix(path, basePath);\n}\nfunction delBasePath(path) {\n  return path.slice(basePath.length) || '/';\n} /**\n  * Detects whether a given url is routable by the Next.js router (browser only).\n  */\nfunction isLocalURL(url) {\n  if (url.startsWith('/')) return true;\n  try {\n    // absolute urls can be local if they are on the same origin\n    var locationOrigin = (0, _utils.getLocationOrigin)();\n    var resolved = new URL(url, locationOrigin);\n    return resolved.origin === locationOrigin && hasBasePath(resolved.pathname);\n  } catch (_) {\n    return false;\n  }\n}\nfunction interpolateAs(route, asPathname, query) {\n  var interpolatedRoute = '';\n  var dynamicRegex = (0, _routeRegex.getRouteRegex)(route);\n  var dynamicGroups = dynamicRegex.groups;\n  var dynamicMatches =\n  // Try to match the dynamic route against the asPath\n  (asPathname !== route ? (0, _routeMatcher.getRouteMatcher)(dynamicRegex)(asPathname) : '') ||\n  // Fall back to reading the values from the href\n  // TODO: should this take priority; also need to change in the router.\n  query;\n  interpolatedRoute = route;\n  var params = Object.keys(dynamicGroups);\n  if (!params.every(function (param) {\n    var value = dynamicMatches[param] || '';\n    var _dynamicGroups$param = dynamicGroups[param],\n      repeat = _dynamicGroups$param.repeat,\n      optional = _dynamicGroups$param.optional; // support single-level catch-all\n    // TODO: more robust handling for user-error (passing `/`)\n    var replaced = \"[\".concat(repeat ? '...' : '').concat(param, \"]\");\n    if (optional) {\n      replaced = \"\".concat(!value ? '/' : '', \"[\").concat(replaced, \"]\");\n    }\n    if (repeat && !Array.isArray(value)) value = [value];\n    return (optional || param in dynamicMatches) && (\n    // Interpolate group into data URL if present\n    interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map(_escapePathDelimiters[\"default\"]).join('/') : (0, _escapePathDelimiters[\"default\"])(value)) || '/');\n  })) {\n    interpolatedRoute = ''; // did not satisfy all requirements\n    // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n  }\n  return {\n    params: params,\n    result: interpolatedRoute\n  };\n}\nfunction omitParmsFromQuery(query, params) {\n  var filteredQuery = {};\n  Object.keys(query).forEach(function (key) {\n    if (!params.includes(key)) {\n      filteredQuery[key] = query[key];\n    }\n  });\n  return filteredQuery;\n} /**\n  * Resolves a given hyperlink with a certain router state (basePath not included).\n  * Preserves absolute urls.\n  */\nfunction resolveHref(currentPath, href, resolveAs) {\n  // we use a dummy base url for relative urls\n  var base = new URL(currentPath, 'http://n');\n  var urlAsString = typeof href === 'string' ? href : (0, _utils.formatWithValidation)(href);\n  try {\n    var finalUrl = new URL(urlAsString, base);\n    finalUrl.pathname = (0, _normalizeTrailingSlash.normalizePathTrailingSlash)(finalUrl.pathname);\n    var interpolatedAs = '';\n    if ((0, _isDynamic.isDynamicRoute)(finalUrl.pathname) && finalUrl.searchParams && resolveAs) {\n      var query = (0, _querystring.searchParamsToUrlQuery)(finalUrl.searchParams);\n      var _interpolateAs = interpolateAs(finalUrl.pathname, finalUrl.pathname, query),\n        result = _interpolateAs.result,\n        params = _interpolateAs.params;\n      if (result) {\n        interpolatedAs = (0, _utils.formatWithValidation)({\n          pathname: result,\n          hash: finalUrl.hash,\n          query: omitParmsFromQuery(query, params)\n        });\n      }\n    } // if the origin didn't change, it means we received a relative href\n    var resolvedHref = finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;\n    return resolveAs ? [resolvedHref, interpolatedAs || resolvedHref] : resolvedHref;\n  } catch (_) {\n    return resolveAs ? [urlAsString] : urlAsString;\n  }\n}\nvar PAGE_LOAD_ERROR = Symbol('PAGE_LOAD_ERROR');\nfunction markLoadingError(err) {\n  return Object.defineProperty(err, PAGE_LOAD_ERROR, {});\n}\nfunction prepareUrlAs(router, url, as) {\n  // If url and as provided as an object representation,\n  // we'll format them into the string version here.\n  return {\n    url: addBasePath(resolveHref(router.pathname, url)),\n    as: as ? addBasePath(resolveHref(router.pathname, as)) : as\n  };\n}\nvar manualScrollRestoration = process.env.__NEXT_SCROLL_RESTORATION && true && 'scrollRestoration' in window.history;\nvar SSG_DATA_NOT_FOUND_ERROR = 'SSG Data NOT_FOUND';\nfunction fetchRetry(url, attempts) {\n  return fetch(url, {\n    // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n    // Cookies may also be required for `getServerSideProps`.\n    //\n    // > `fetch` won’t send cookies, unless you set the credentials init\n    // > option.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n    //\n    // > For maximum browser compatibility when it comes to sending &\n    // > receiving cookies, always supply the `credentials: 'same-origin'`\n    // > option instead of relying on the default.\n    // https://github.com/github/fetch#caveats\n    credentials: 'same-origin'\n  }).then(function (res) {\n    if (!res.ok) {\n      if (attempts > 1 && res.status >= 500) {\n        return fetchRetry(url, attempts - 1);\n      }\n      if (res.status === 404) {\n        // TODO: handle reloading in development from fallback returning 200\n        // to on-demand-entry-handler causing it to reload periodically\n        throw new Error(SSG_DATA_NOT_FOUND_ERROR);\n      }\n      throw new Error(\"Failed to load static props\");\n    }\n    return res.json();\n  });\n}\nfunction fetchNextData(dataHref, isServerRender) {\n  return fetchRetry(dataHref, isServerRender ? 3 : 1)[\"catch\"](function (err) {\n    // We should only trigger a server-side transition if this was caused\n    // on a client-side transition. Otherwise, we'd get into an infinite\n    // loop.\n    if (!isServerRender) {\n      markLoadingError(err);\n    }\n    throw err;\n  });\n}\nvar Router = /*#__PURE__*/function () {\n  /**\n  * Map of all components loaded in `Router`\n  */ // Static Data Cache\n  function Router(_pathname, _query, _as, _ref) {\n    var _this = this;\n    var initialProps = _ref.initialProps,\n      pageLoader = _ref.pageLoader,\n      App = _ref.App,\n      wrapApp = _ref.wrapApp,\n      Component = _ref.Component,\n      initialStyleSheets = _ref.initialStyleSheets,\n      err = _ref.err,\n      subscription = _ref.subscription,\n      isFallback = _ref.isFallback,\n      locale = _ref.locale,\n      locales = _ref.locales,\n      defaultLocale = _ref.defaultLocale;\n    _classCallCheck(this, Router);\n    this.route = void 0;\n    this.pathname = void 0;\n    this.query = void 0;\n    this.asPath = void 0;\n    this.basePath = void 0;\n    this.components = void 0;\n    this.sdc = {};\n    this.sub = void 0;\n    this.clc = void 0;\n    this.pageLoader = void 0;\n    this._bps = void 0;\n    this.events = void 0;\n    this._wrapApp = void 0;\n    this.isSsr = void 0;\n    this.isFallback = void 0;\n    this._inFlightRoute = void 0;\n    this._shallow = void 0;\n    this.locale = void 0;\n    this.locales = void 0;\n    this.defaultLocale = void 0;\n    this.onPopState = function (e) {\n      var state = e.state;\n      if (!state) {\n        // We get state as undefined for two reasons.\n        //  1. With older safari (< 8) and older chrome (< 34)\n        //  2. When the URL changed with #\n        //\n        // In the both cases, we don't need to proceed and change the route.\n        // (as it's already changed)\n        // But we can simply replace the state with the new changes.\n        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n        // So, doing the following for (1) does no harm.\n        var _pathname2 = _this.pathname,\n          query = _this.query;\n        _this.changeState('replaceState', (0, _utils.formatWithValidation)({\n          pathname: addBasePath(_pathname2),\n          query: query\n        }), (0, _utils.getURL)());\n        return;\n      }\n      if (!state.__N) {\n        return;\n      }\n      var url = state.url,\n        as = state.as,\n        options = state.options;\n      var _ref2 = (0, _parseRelativeUrl.parseRelativeUrl)(url),\n        pathname = _ref2.pathname; // Make sure we don't re-render on initial load,\n      // can be caused by navigating back from an external site\n      if (_this.isSsr && as === _this.asPath && pathname === _this.pathname) {\n        return;\n      } // If the downstream application returns falsy, return.\n      // They will then be responsible for handling the event.\n      if (_this._bps && !_this._bps(state)) {\n        return;\n      }\n      _this.change('replaceState', url, as, Object.assign({}, options, {\n        shallow: options.shallow && _this._shallow,\n        locale: options.locale || _this.defaultLocale\n      }));\n    }; // represents the current component key\n    this.route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(_pathname); // set up the component cache (by route keys)\n    this.components = {}; // We should not keep the cache, if there's an error\n    // Otherwise, this cause issues when when going back and\n    // come again to the errored page.\n    if (_pathname !== '/_error') {\n      this.components[this.route] = {\n        Component: Component,\n        styleSheets: initialStyleSheets,\n        props: initialProps,\n        err: err,\n        __N_SSG: initialProps && initialProps.__N_SSG,\n        __N_SSP: initialProps && initialProps.__N_SSP\n      };\n    }\n    this.components['/_app'] = {\n      Component: App,\n      styleSheets: [/* /_app does not need its stylesheets managed */]\n    }; // Backwards compat for Router.router.events\n    // TODO: Should be remove the following major version as it was never documented\n    this.events = Router.events;\n    this.pageLoader = pageLoader;\n    this.pathname = _pathname;\n    this.query = _query; // if auto prerendered and dynamic route wait to update asPath\n    // until after mount to prevent hydration mismatch\n    this.asPath =\n    // @ts-ignore this is temporarily global (attached to window)\n    (0, _isDynamic.isDynamicRoute)(_pathname) && __NEXT_DATA__.autoExport ? _pathname : _as;\n    this.basePath = basePath;\n    this.sub = subscription;\n    this.clc = null;\n    this._wrapApp = wrapApp; // make sure to ignore extra popState in safari on navigating\n    // back from external site\n    this.isSsr = true;\n    this.isFallback = isFallback;\n    if (process.env.__NEXT_I18N_SUPPORT) {\n      this.locale = locale;\n      this.locales = locales;\n      this.defaultLocale = defaultLocale;\n    }\n    if (true) {\n      // make sure \"as\" doesn't start with double slashes or else it can\n      // throw an error as it's considered invalid\n      if (_as.substr(0, 2) !== '//') {\n        // in order for `e.state` to work on the `onpopstate` event\n        // we have to register the initial route upon initialization\n        this.changeState('replaceState', (0, _utils.formatWithValidation)({\n          pathname: addBasePath(_pathname),\n          query: _query\n        }), (0, _utils.getURL)());\n      }\n      window.addEventListener('popstate', this.onPopState); // enable custom scroll restoration handling when available\n      // otherwise fallback to browser's default handling\n      if (process.env.__NEXT_SCROLL_RESTORATION) {\n        if (manualScrollRestoration) {\n          window.history.scrollRestoration = 'manual';\n          var scrollDebounceTimeout;\n          var debouncedScrollSave = function debouncedScrollSave() {\n            if (scrollDebounceTimeout) clearTimeout(scrollDebounceTimeout);\n            scrollDebounceTimeout = setTimeout(function () {\n              var _history$state = history.state,\n                url = _history$state.url,\n                curAs = _history$state.as,\n                options = _history$state.options;\n              _this.changeState('replaceState', url, curAs, Object.assign({}, options, {\n                _N_X: window.scrollX,\n                _N_Y: window.scrollY\n              }));\n            }, 10);\n          };\n          window.addEventListener('scroll', debouncedScrollSave);\n        }\n      }\n    }\n  }\n  _createClass(Router, [{\n    key: \"reload\",\n    value: function reload() {\n      window.location.reload();\n    } /**\n      * Go back in history\n      */\n  }, {\n    key: \"back\",\n    value: function back() {\n      window.history.back();\n    } /**\n      * Performs a `pushState` with arguments\n      * @param url of the route\n      * @param as masks `url` for the browser\n      * @param options object you can define `shallow` and other options\n      */\n  }, {\n    key: \"push\",\n    value: function push(url) {\n      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      ;\n      var _prepareUrlAs = prepareUrlAs(this, url, as);\n      url = _prepareUrlAs.url;\n      as = _prepareUrlAs.as;\n      return this.change('pushState', url, as, options);\n    } /**\n      * Performs a `replaceState` with arguments\n      * @param url of the route\n      * @param as masks `url` for the browser\n      * @param options object you can define `shallow` and other options\n      */\n  }, {\n    key: \"replace\",\n    value: function replace(url) {\n      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      ;\n      var _prepareUrlAs2 = prepareUrlAs(this, url, as);\n      url = _prepareUrlAs2.url;\n      as = _prepareUrlAs2.as;\n      return this.change('replaceState', url, as, options);\n    }\n  }, {\n    key: \"change\",\n    value: function () {\n      var _change = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(method, url, as, options) {\n        var _this2 = this;\n        var _require, normalizeLocalePath, localePathResult, cleanedAs, pages, _yield$this$pageLoade, rewrites, parsed, _parsed, pathname, query, route, _options$shallow, shallow, resolvedAs, potentialHref, parsedAs, asPathname, routeRegex, routeMatch, shouldInterpolate, interpolatedAs, missingParams, routeInfo, error, props, __N_SSG, __N_SSP, destination, parsedHref, appComp;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (isLocalURL(url)) {\n                  _context.next = 3;\n                  break;\n                }\n                window.location.href = url;\n                return _context.abrupt(\"return\", false);\n              case 3:\n                if (process.env.__NEXT_I18N_SUPPORT) {\n                  this.locale = options.locale || this.locale;\n                  if (typeof options.locale === 'undefined') {\n                    options.locale = this.locale;\n                  }\n                  _require = require('../i18n/normalize-locale-path'), normalizeLocalePath = _require.normalizeLocalePath;\n                  localePathResult = normalizeLocalePath(as, this.locales);\n                  if (localePathResult.detectedLocale) {\n                    this.locale = localePathResult.detectedLocale;\n                    url = localePathResult.pathname;\n                  }\n                }\n                if (!options._h) {\n                  this.isSsr = false;\n                } // marking route changes as a navigation start entry\n                if (_utils.ST) {\n                  performance.mark('routeChange');\n                }\n                if (this._inFlightRoute) {\n                  this.abortComponentLoad(this._inFlightRoute);\n                }\n                as = addLocale(as, options.locale, this.defaultLocale);\n                cleanedAs = delLocale(hasBasePath(as) ? delBasePath(as) : as, this.locale);\n                this._inFlightRoute = as; // If the url change is only related to a hash change\n                // We should not proceed. We should only change the state.\n                // WARNING: `_h` is an internal option for handing Next.js client-side\n                // hydration. Your app should _never_ use this property. It may change at\n                // any time without notice.\n                if (!(!options._h && this.onlyAHashChange(cleanedAs))) {\n                  _context.next = 18;\n                  break;\n                }\n                this.asPath = cleanedAs;\n                Router.events.emit('hashChangeStart', as); // TODO: do we need the resolved href when only a hash change?\n                this.changeState(method, url, as, options);\n                this.scrollToHash(cleanedAs);\n                this.notify(this.components[this.route]);\n                Router.events.emit('hashChangeComplete', as);\n                return _context.abrupt(\"return\", true);\n              case 18:\n                _context.next = 20;\n                return this.pageLoader.getPageList();\n              case 20:\n                pages = _context.sent;\n                _context.next = 23;\n                return this.pageLoader.promisedBuildManifest;\n              case 23:\n                _yield$this$pageLoade = _context.sent;\n                rewrites = _yield$this$pageLoade.__rewrites;\n                parsed = (0, _parseRelativeUrl.parseRelativeUrl)(url);\n                _parsed = parsed, pathname = _parsed.pathname, query = _parsed.query;\n                parsed = this._resolveHref(parsed, pages);\n                if (parsed.pathname !== pathname) {\n                  pathname = parsed.pathname;\n                  url = (0, _utils.formatWithValidation)(parsed);\n                } // url and as should always be prefixed with basePath by this\n                // point by either next/link or router.push/replace so strip the\n                // basePath from the pathname to match the pages dir 1-to-1\n                pathname = pathname ? (0, _normalizeTrailingSlash.removePathTrailingSlash)(delBasePath(pathname)) : pathname; // If asked to change the current URL we should reload the current page\n                // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n                // We also need to set the method = replaceState always\n                // as this should not go into the history (That's how browsers work)\n                // We should compare the new asPath to the current asPath, not the url\n                if (!this.urlIsNew(cleanedAs)) {\n                  method = 'replaceState';\n                }\n                route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname);\n                _options$shallow = options.shallow, shallow = _options$shallow === void 0 ? false : _options$shallow; // we need to resolve the as value using rewrites for dynamic SSG\n                // pages to allow building the data URL correctly\n                resolvedAs = as;\n                if (process.env.__NEXT_HAS_REWRITES) {\n                  resolvedAs = (0, _resolveRewrites[\"default\"])((0, _parseRelativeUrl.parseRelativeUrl)(as).pathname, pages, basePath, rewrites, query, function (p) {\n                    return _this2._resolveHref({\n                      pathname: p\n                    }, pages).pathname;\n                  });\n                  if (resolvedAs !== as) {\n                    potentialHref = (0, _normalizeTrailingSlash.removePathTrailingSlash)(this._resolveHref(Object.assign({}, parsed, {\n                      pathname: resolvedAs\n                    }), pages, false).pathname); // if this directly matches a page we need to update the href to\n                    // allow the correct page chunk to be loaded\n                    if (pages.includes(potentialHref)) {\n                      route = potentialHref;\n                      pathname = potentialHref;\n                      parsed.pathname = pathname;\n                      url = (0, _utils.formatWithValidation)(parsed);\n                    }\n                  }\n                }\n                resolvedAs = delLocale(delBasePath(resolvedAs), this.locale);\n                if (!(0, _isDynamic.isDynamicRoute)(route)) {\n                  _context.next = 51;\n                  break;\n                }\n                parsedAs = (0, _parseRelativeUrl.parseRelativeUrl)(resolvedAs);\n                asPathname = parsedAs.pathname;\n                routeRegex = (0, _routeRegex.getRouteRegex)(route);\n                routeMatch = (0, _routeMatcher.getRouteMatcher)(routeRegex)(asPathname);\n                shouldInterpolate = route === asPathname;\n                interpolatedAs = shouldInterpolate ? interpolateAs(route, asPathname, query) : {};\n                if (!(!routeMatch || shouldInterpolate && !interpolatedAs.result)) {\n                  _context.next = 50;\n                  break;\n                }\n                missingParams = Object.keys(routeRegex.groups).filter(function (param) {\n                  return !query[param];\n                });\n                if (!(missingParams.length > 0)) {\n                  _context.next = 48;\n                  break;\n                }\n                if (true) {\n                  console.warn(\"\".concat(shouldInterpolate ? \"Interpolating href\" : \"Mismatching `as` and `href`\", \" failed to manually provide \") + \"the params: \".concat(missingParams.join(', '), \" in the `href`'s `query`\"));\n                }\n                throw new Error((shouldInterpolate ? \"The provided `href` (\".concat(url, \") value is missing query values (\").concat(missingParams.join(', '), \") to be interpolated properly. \") : \"The provided `as` value (\".concat(asPathname, \") is incompatible with the `href` value (\").concat(route, \"). \")) + \"Read more: https://err.sh/vercel/next.js/\".concat(shouldInterpolate ? 'href-interpolation-failed' : 'incompatible-href-as'));\n              case 48:\n                _context.next = 51;\n                break;\n              case 50:\n                if (shouldInterpolate) {\n                  as = (0, _utils.formatWithValidation)(Object.assign({}, parsedAs, {\n                    pathname: interpolatedAs.result,\n                    query: omitParmsFromQuery(query, interpolatedAs.params)\n                  }));\n                } else {\n                  // Merge params into `query`, overwriting any specified in search\n                  Object.assign(query, routeMatch);\n                }\n              case 51:\n                Router.events.emit('routeChangeStart', as);\n                _context.prev = 52;\n                _context.next = 55;\n                return this.getRouteInfo(route, pathname, query, as, shallow);\n              case 55:\n                routeInfo = _context.sent;\n                error = routeInfo.error, props = routeInfo.props, __N_SSG = routeInfo.__N_SSG, __N_SSP = routeInfo.__N_SSP; // handle redirect on client-transition\n                if (!((__N_SSG || __N_SSP) && props && props.pageProps && props.pageProps.__N_REDIRECT)) {\n                  _context.next = 66;\n                  break;\n                }\n                destination = props.pageProps.__N_REDIRECT; // check if destination is internal (resolves to a page) and attempt\n                // client-navigation if it is falling back to hard navigation if\n                // it's not\n                if (!destination.startsWith('/')) {\n                  _context.next = 64;\n                  break;\n                }\n                parsedHref = (0, _parseRelativeUrl.parseRelativeUrl)(destination);\n                this._resolveHref(parsedHref, pages);\n                if (!pages.includes(parsedHref.pathname)) {\n                  _context.next = 64;\n                  break;\n                }\n                return _context.abrupt(\"return\", this.change(method, destination, destination, options));\n              case 64:\n                window.location.href = destination;\n                return _context.abrupt(\"return\", new Promise(function () {}));\n              case 66:\n                Router.events.emit('beforeHistoryChange', as);\n                this.changeState(method, url, addLocale(as, options.locale, this.defaultLocale), options);\n                if (true) {\n                  appComp = this.components['/_app'].Component;\n                  window.next.isPrerendered = appComp.getInitialProps === appComp.origGetInitialProps && !routeInfo.Component.getInitialProps;\n                }\n                _context.next = 71;\n                return this.set(route, pathname, query, cleanedAs, routeInfo)[\"catch\"](function (e) {\n                  if (e.cancelled) error = error || e;else throw e;\n                });\n              case 71:\n                if (!error) {\n                  _context.next = 74;\n                  break;\n                }\n                Router.events.emit('routeChangeError', error, cleanedAs);\n                throw error;\n              case 74:\n                if (process.env.__NEXT_SCROLL_RESTORATION) {\n                  if (manualScrollRestoration && '_N_X' in options) {\n                    window.scrollTo(options._N_X, options._N_Y);\n                  }\n                }\n                if (process.env.__NEXT_I18N_SUPPORT) {\n                  if (this.locale) {\n                    document.documentElement.lang = this.locale;\n                  }\n                }\n                Router.events.emit('routeChangeComplete', as);\n                return _context.abrupt(\"return\", true);\n              case 80:\n                _context.prev = 80;\n                _context.t0 = _context[\"catch\"](52);\n                if (!_context.t0.cancelled) {\n                  _context.next = 84;\n                  break;\n                }\n                return _context.abrupt(\"return\", false);\n              case 84:\n                throw _context.t0;\n              case 85:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[52, 80]]);\n      }));\n      function change(_x, _x2, _x3, _x4) {\n        return _change.apply(this, arguments);\n      }\n      return change;\n    }()\n  }, {\n    key: \"changeState\",\n    value: function changeState(method, url, as) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      if (true) {\n        if (typeof window.history === 'undefined') {\n          console.error(\"Warning: window.history is not available.\");\n          return;\n        }\n        if (typeof window.history[method] === 'undefined') {\n          console.error(\"Warning: window.history.\".concat(method, \" is not available\"));\n          return;\n        }\n      }\n      if (method !== 'pushState' || (0, _utils.getURL)() !== as) {\n        this._shallow = options.shallow;\n        window.history[method]({\n          url: url,\n          as: as,\n          options: options,\n          __N: true\n        },\n        // Most browsers currently ignores this parameter, although they may use it in the future.\n        // Passing the empty string here should be safe against future changes to the method.\n        // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n        '', as);\n      }\n    }\n  }, {\n    key: \"handleRouteInfoError\",\n    value: function () {\n      var _handleRouteInfoError = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(err, pathname, query, as, loadErrorFail) {\n        var Component, styleSheets, props, ssg404, mod, _yield$this$fetchComp, _yield$this$fetchComp2, routeInfo;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!err.cancelled) {\n                  _context2.next = 2;\n                  break;\n                }\n                throw err;\n              case 2:\n                if (!(PAGE_LOAD_ERROR in err || loadErrorFail)) {\n                  _context2.next = 6;\n                  break;\n                }\n                Router.events.emit('routeChangeError', err, as); // If we can't load the page it could be one of following reasons\n                //  1. Page doesn't exists\n                //  2. Page does exist in a different zone\n                //  3. Internal error while loading the page\n                // So, doing a hard reload is the proper way to deal with this.\n                window.location.href = as; // Changing the URL doesn't block executing the current code path.\n                // So let's throw a cancellation error stop the routing logic.\n                throw buildCancellationError();\n              case 6:\n                _context2.prev = 6;\n                ssg404 = err.message === SSG_DATA_NOT_FOUND_ERROR;\n                if (!ssg404) {\n                  _context2.next = 24;\n                  break;\n                }\n                _context2.prev = 9;\n                _context2.next = 12;\n                return this.fetchComponent('/404');\n              case 12:\n                _yield$this$fetchComp = _context2.sent;\n                Component = _yield$this$fetchComp.page;\n                styleSheets = _yield$this$fetchComp.styleSheets;\n                mod = _yield$this$fetchComp.mod;\n                if (!(mod && mod.__N_SSG)) {\n                  _context2.next = 20;\n                  break;\n                }\n                _context2.next = 19;\n                return this._getStaticData(this.pageLoader.getDataHref('/404', '/404', true, this.locale));\n              case 19:\n                props = _context2.sent;\n              case 20:\n                _context2.next = 24;\n                break;\n              case 22:\n                _context2.prev = 22;\n                _context2.t0 = _context2[\"catch\"](9);\n              case 24:\n                if (!(typeof Component === 'undefined' || typeof styleSheets === 'undefined')) {\n                  _context2.next = 31;\n                  break;\n                }\n                ;\n                _context2.next = 28;\n                return this.fetchComponent('/_error');\n              case 28:\n                _yield$this$fetchComp2 = _context2.sent;\n                Component = _yield$this$fetchComp2.page;\n                styleSheets = _yield$this$fetchComp2.styleSheets;\n              case 31:\n                routeInfo = {\n                  props: props,\n                  Component: Component,\n                  styleSheets: styleSheets,\n                  err: ssg404 ? undefined : err,\n                  error: ssg404 ? undefined : err\n                };\n                if (routeInfo.props) {\n                  _context2.next = 43;\n                  break;\n                }\n                _context2.prev = 33;\n                _context2.next = 36;\n                return this.getInitialProps(Component, {\n                  err: err,\n                  pathname: pathname,\n                  query: query\n                });\n              case 36:\n                routeInfo.props = _context2.sent;\n                _context2.next = 43;\n                break;\n              case 39:\n                _context2.prev = 39;\n                _context2.t1 = _context2[\"catch\"](33);\n                console.error('Error in error page `getInitialProps`: ', _context2.t1);\n                routeInfo.props = {};\n              case 43:\n                return _context2.abrupt(\"return\", routeInfo);\n              case 46:\n                _context2.prev = 46;\n                _context2.t2 = _context2[\"catch\"](6);\n                return _context2.abrupt(\"return\", this.handleRouteInfoError(_context2.t2, pathname, query, as, true));\n              case 49:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[6, 46], [9, 22], [33, 39]]);\n      }));\n      function handleRouteInfoError(_x5, _x6, _x7, _x8, _x9) {\n        return _handleRouteInfoError.apply(this, arguments);\n      }\n      return handleRouteInfoError;\n    }()\n  }, {\n    key: \"getRouteInfo\",\n    value: function () {\n      var _getRouteInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(route, pathname, query, as) {\n        var _this3 = this;\n        var shallow,\n          cachedRouteInfo,\n          routeInfo,\n          Component,\n          __N_SSG,\n          __N_SSP,\n          _require2,\n          isValidElementType,\n          dataHref,\n          props,\n          _args3 = arguments;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                shallow = _args3.length > 4 && _args3[4] !== undefined ? _args3[4] : false;\n                _context3.prev = 1;\n                cachedRouteInfo = this.components[route];\n                if (!(shallow && cachedRouteInfo && this.route === route)) {\n                  _context3.next = 5;\n                  break;\n                }\n                return _context3.abrupt(\"return\", cachedRouteInfo);\n              case 5:\n                if (!cachedRouteInfo) {\n                  _context3.next = 9;\n                  break;\n                }\n                _context3.t0 = cachedRouteInfo;\n                _context3.next = 12;\n                break;\n              case 9:\n                _context3.next = 11;\n                return this.fetchComponent(route).then(function (res) {\n                  return {\n                    Component: res.page,\n                    styleSheets: res.styleSheets,\n                    __N_SSG: res.mod.__N_SSG,\n                    __N_SSP: res.mod.__N_SSP\n                  };\n                });\n              case 11:\n                _context3.t0 = _context3.sent;\n              case 12:\n                routeInfo = _context3.t0;\n                Component = routeInfo.Component, __N_SSG = routeInfo.__N_SSG, __N_SSP = routeInfo.__N_SSP;\n                if (!true) {\n                  _context3.next = 18;\n                  break;\n                }\n                _require2 = require('react-is'), isValidElementType = _require2.isValidElementType;\n                if (isValidElementType(Component)) {\n                  _context3.next = 18;\n                  break;\n                }\n                throw new Error(\"The default export is not a React Component in page: \\\"\".concat(pathname, \"\\\"\"));\n              case 18:\n                if (__N_SSG || __N_SSP) {\n                  dataHref = this.pageLoader.getDataHref((0, _utils.formatWithValidation)({\n                    pathname: pathname,\n                    query: query\n                  }), delBasePath(as), __N_SSG, this.locale);\n                }\n                _context3.next = 21;\n                return this._getData(function () {\n                  return __N_SSG ? _this3._getStaticData(dataHref) : __N_SSP ? _this3._getServerData(dataHref) : _this3.getInitialProps(Component,\n                  // we provide AppTree later so this needs to be `any`\n                  {\n                    pathname: pathname,\n                    query: query,\n                    asPath: as\n                  });\n                });\n              case 21:\n                props = _context3.sent;\n                routeInfo.props = props;\n                this.components[route] = routeInfo;\n                return _context3.abrupt(\"return\", routeInfo);\n              case 27:\n                _context3.prev = 27;\n                _context3.t1 = _context3[\"catch\"](1);\n                return _context3.abrupt(\"return\", this.handleRouteInfoError(_context3.t1, pathname, query, as));\n              case 30:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[1, 27]]);\n      }));\n      function getRouteInfo(_x10, _x11, _x12, _x13) {\n        return _getRouteInfo.apply(this, arguments);\n      }\n      return getRouteInfo;\n    }()\n  }, {\n    key: \"set\",\n    value: function set(route, pathname, query, as, data) {\n      this.isFallback = false;\n      this.route = route;\n      this.pathname = pathname;\n      this.query = query;\n      this.asPath = as;\n      return this.notify(data);\n    } /**\n      * Callback to execute before replacing router state\n      * @param cb callback to be executed\n      */\n  }, {\n    key: \"beforePopState\",\n    value: function beforePopState(cb) {\n      this._bps = cb;\n    }\n  }, {\n    key: \"onlyAHashChange\",\n    value: function onlyAHashChange(as) {\n      if (!this.asPath) return false;\n      var _this$asPath$split = this.asPath.split('#'),\n        _this$asPath$split2 = _slicedToArray(_this$asPath$split, 2),\n        oldUrlNoHash = _this$asPath$split2[0],\n        oldHash = _this$asPath$split2[1];\n      var _as$split = as.split('#'),\n        _as$split2 = _slicedToArray(_as$split, 2),\n        newUrlNoHash = _as$split2[0],\n        newHash = _as$split2[1]; // Makes sure we scroll to the provided hash if the url/hash are the same\n      if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n        return true;\n      } // If the urls are change, there's more than a hash change\n      if (oldUrlNoHash !== newUrlNoHash) {\n        return false;\n      } // If the hash has changed, then it's a hash only change.\n      // This check is necessary to handle both the enter and\n      // leave hash === '' cases. The identity case falls through\n      // and is treated as a next reload.\n      return oldHash !== newHash;\n    }\n  }, {\n    key: \"scrollToHash\",\n    value: function scrollToHash(as) {\n      var _as$split3 = as.split('#'),\n        _as$split4 = _slicedToArray(_as$split3, 2),\n        hash = _as$split4[1]; // Scroll to top if the hash is just `#` with no value\n      if (hash === '') {\n        window.scrollTo(0, 0);\n        return;\n      } // First we check if the element by id is found\n      var idEl = document.getElementById(hash);\n      if (idEl) {\n        idEl.scrollIntoView();\n        return;\n      } // If there's no element with the id, we check the `name` property\n      // To mirror browsers\n      var nameEl = document.getElementsByName(hash)[0];\n      if (nameEl) {\n        nameEl.scrollIntoView();\n      }\n    }\n  }, {\n    key: \"urlIsNew\",\n    value: function urlIsNew(asPath) {\n      return this.asPath !== asPath;\n    }\n  }, {\n    key: \"_resolveHref\",\n    value: function _resolveHref(parsedHref, pages) {\n      var applyBasePath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var pathname = parsedHref.pathname;\n      var cleanPathname = (0, _normalizeTrailingSlash.removePathTrailingSlash)((0, _denormalizePagePath.denormalizePagePath)(applyBasePath ? delBasePath(pathname) : pathname));\n      if (cleanPathname === '/404' || cleanPathname === '/_error') {\n        return parsedHref;\n      } // handle resolving href for dynamic routes\n      if (!pages.includes(cleanPathname)) {\n        // eslint-disable-next-line array-callback-return\n        pages.some(function (page) {\n          if ((0, _isDynamic.isDynamicRoute)(page) && (0, _routeRegex.getRouteRegex)(page).re.test(cleanPathname)) {\n            parsedHref.pathname = applyBasePath ? addBasePath(page) : page;\n            return true;\n          }\n        });\n      }\n      return parsedHref;\n    } /**\n      * Prefetch page code, you may wait for the data during page rendering.\n      * This feature only works in production!\n      * @param url the href of prefetched page\n      * @param asPath the as path of the prefetched page\n      */\n  }, {\n    key: \"prefetch\",\n    value: function () {\n      var _prefetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(url) {\n        var asPath,\n          options,\n          parsed,\n          _parsed2,\n          pathname,\n          normalizeLocalePath,\n          parsedAs,\n          localePathResult,\n          pages,\n          route,\n          _args4 = arguments;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                asPath = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : url;\n                options = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : {};\n                parsed = (0, _parseRelativeUrl.parseRelativeUrl)(url);\n                _parsed2 = parsed, pathname = _parsed2.pathname;\n                if (process.env.__NEXT_I18N_SUPPORT) {\n                  normalizeLocalePath = require('../i18n/normalize-locale-path').normalizeLocalePath;\n                  if (options.locale === false) {\n                    pathname = normalizeLocalePath(pathname, this.locales).pathname;\n                    parsed.pathname = pathname;\n                    url = (0, _utils.formatWithValidation)(parsed);\n                    parsedAs = (0, _parseRelativeUrl.parseRelativeUrl)(asPath);\n                    localePathResult = normalizeLocalePath(parsedAs.pathname, this.locales);\n                    parsedAs.pathname = localePathResult.pathname;\n                    options.locale = localePathResult.detectedLocale || options.locale;\n                    asPath = (0, _utils.formatWithValidation)(parsedAs);\n                  }\n                }\n                _context4.next = 7;\n                return this.pageLoader.getPageList();\n              case 7:\n                pages = _context4.sent;\n                parsed = this._resolveHref(parsed, pages);\n                if (parsed.pathname !== pathname) {\n                  pathname = parsed.pathname;\n                  url = (0, _utils.formatWithValidation)(parsed);\n                } // Prefetch is not supported in development mode because it would trigger on-demand-entries\n                if (!true) {\n                  _context4.next = 12;\n                  break;\n                }\n                return _context4.abrupt(\"return\");\n              case 12:\n                route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname);\n                _context4.next = 15;\n                return Promise.all([this.pageLoader.prefetchData(url, asPath, typeof options.locale !== 'undefined' ? options.locale : this.locale, this.defaultLocale), this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route)]);\n              case 15:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function prefetch(_x14) {\n        return _prefetch.apply(this, arguments);\n      }\n      return prefetch;\n    }()\n  }, {\n    key: \"fetchComponent\",\n    value: function () {\n      var _fetchComponent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(route) {\n        var cancelled, cancel, componentResult, error;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                cancelled = false;\n                cancel = this.clc = function () {\n                  cancelled = true;\n                };\n                _context5.next = 4;\n                return this.pageLoader.loadPage(route);\n              case 4:\n                componentResult = _context5.sent;\n                if (!cancelled) {\n                  _context5.next = 9;\n                  break;\n                }\n                error = new Error(\"Abort fetching component for route: \\\"\".concat(route, \"\\\"\"));\n                error.cancelled = true;\n                throw error;\n              case 9:\n                if (cancel === this.clc) {\n                  this.clc = null;\n                }\n                return _context5.abrupt(\"return\", componentResult);\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n      function fetchComponent(_x15) {\n        return _fetchComponent.apply(this, arguments);\n      }\n      return fetchComponent;\n    }()\n  }, {\n    key: \"_getData\",\n    value: function _getData(fn) {\n      var _this4 = this;\n      var cancelled = false;\n      var cancel = function cancel() {\n        cancelled = true;\n      };\n      this.clc = cancel;\n      return fn().then(function (data) {\n        if (cancel === _this4.clc) {\n          _this4.clc = null;\n        }\n        if (cancelled) {\n          var err = new Error('Loading initial props cancelled');\n          err.cancelled = true;\n          throw err;\n        }\n        return data;\n      });\n    }\n  }, {\n    key: \"_getStaticData\",\n    value: function _getStaticData(dataHref) {\n      var _this5 = this;\n      var _URL = new URL(dataHref, window.location.href),\n        cacheKey = _URL.href;\n      if (false && this.sdc[cacheKey]) {\n        return Promise.resolve(this.sdc[cacheKey]);\n      }\n      return fetchNextData(dataHref, this.isSsr).then(function (data) {\n        _this5.sdc[cacheKey] = data;\n        return data;\n      });\n    }\n  }, {\n    key: \"_getServerData\",\n    value: function _getServerData(dataHref) {\n      return fetchNextData(dataHref, this.isSsr);\n    }\n  }, {\n    key: \"getInitialProps\",\n    value: function getInitialProps(Component, ctx) {\n      var App = this.components['/_app'].Component;\n      var AppTree = this._wrapApp(App);\n      ctx.AppTree = AppTree;\n      return (0, _utils.loadGetInitialProps)(App, {\n        AppTree: AppTree,\n        Component: Component,\n        router: this,\n        ctx: ctx\n      });\n    }\n  }, {\n    key: \"abortComponentLoad\",\n    value: function abortComponentLoad(as) {\n      if (this.clc) {\n        Router.events.emit('routeChangeError', buildCancellationError(), as);\n        this.clc();\n        this.clc = null;\n      }\n    }\n  }, {\n    key: \"notify\",\n    value: function notify(data) {\n      return this.sub(data, this.components['/_app'].Component);\n    }\n  }]);\n  return Router;\n}();\nexports[\"default\"] = Router;\nRouter.events = (0, _mitt[\"default\"])();","map":{"version":3,"sources":["../../../../next-server/lib/router/router.ts"],"names":["basePath","process","env","__NEXT_ROUTER_BASEPATH","buildCancellationError","Object","assign","Error","cancelled","addPathPrefix","path","prefix","startsWith","addLocale","locale","defaultLocale","__NEXT_I18N_SUPPORT","delLocale","substr","length","hasBasePath","addBasePath","delBasePath","slice","isLocalURL","url","locationOrigin","resolved","URL","origin","pathname","_","interpolateAs","route","asPathname","query","interpolatedRoute","dynamicRegex","dynamicGroups","groups","dynamicMatches","params","keys","every","param","value","repeat","optional","replaced","Array","isArray","replace","map","escapePathDelimiters","join","result","omitParmsFromQuery","filteredQuery","forEach","key","includes","resolveHref","currentPath","href","resolveAs","base","urlAsString","finalUrl","interpolatedAs","searchParams","hash","resolvedHref","PAGE_LOAD_ERROR","Symbol","markLoadingError","err","defineProperty","prepareUrlAs","router","as","manualScrollRestoration","__NEXT_SCROLL_RESTORATION","window","history","SSG_DATA_NOT_FOUND_ERROR","fetchRetry","attempts","credentials","then","res","ok","status","json","fetchNextData","dataHref","isServerRender","Router","asPath","components","sdc","sub","clc","pageLoader","_bps","events","_wrapApp","isSsr","isFallback","_inFlightRoute","_shallow","locales","constructor","initialProps","App","wrapApp","Component","initialStyleSheets","subscription","styleSheets","props","__N_SSG","__N_SSP","__NEXT_DATA__","autoExport","changeState","addEventListener","onPopState","scrollRestoration","scrollDebounceTimeout","debouncedScrollSave","clearTimeout","setTimeout","curAs","options","state","_N_X","scrollX","_N_Y","scrollY","e","__N","change","shallow","reload","location","back","push","method","normalizeLocalePath","require","localePathResult","detectedLocale","_h","ST","performance","mark","abortComponentLoad","cleanedAs","onlyAHashChange","emit","scrollToHash","notify","pages","getPageList","__rewrites","rewrites","promisedBuildManifest","parsed","_resolveHref","urlIsNew","resolvedAs","__NEXT_HAS_REWRITES","p","potentialHref","parsedAs","routeRegex","routeMatch","shouldInterpolate","missingParams","filter","console","warn","routeInfo","getRouteInfo","error","pageProps","__N_REDIRECT","destination","parsedHref","Promise","appComp","next","isPrerendered","getInitialProps","origGetInitialProps","set","scrollTo","document","documentElement","lang","loadErrorFail","ssg404","message","page","mod","fetchComponent","_getStaticData","getDataHref","undefined","handleRouteInfoError","cachedRouteInfo","isValidElementType","_getData","_getServerData","data","beforePopState","cb","oldUrlNoHash","oldHash","split","newUrlNoHash","newHash","idEl","getElementById","scrollIntoView","nameEl","getElementsByName","applyBasePath","cleanPathname","some","re","test","all","prefetchData","priority","cancel","componentResult","loadPage","fn","cacheKey","resolve","ctx","AppTree"],"mappings":"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","sourcesContent":["/* global __NEXT_DATA__ */\n// tslint:disable:no-console\nimport { ParsedUrlQuery } from 'querystring'\nimport { ComponentType } from 'react'\nimport { UrlObject } from 'url'\nimport {\n  normalizePathTrailingSlash,\n  removePathTrailingSlash,\n} from '../../../client/normalize-trailing-slash'\nimport { GoodPageCache, StyleSheetTuple } from '../../../client/page-loader'\nimport { denormalizePagePath } from '../../server/denormalize-page-path'\nimport mitt, { MittEmitter } from '../mitt'\nimport {\n  AppContextType,\n  formatWithValidation,\n  getLocationOrigin,\n  getURL,\n  loadGetInitialProps,\n  NextPageContext,\n  ST,\n} from '../utils'\nimport { isDynamicRoute } from './utils/is-dynamic'\nimport { parseRelativeUrl } from './utils/parse-relative-url'\nimport { searchParamsToUrlQuery } from './utils/querystring'\nimport resolveRewrites from './utils/resolve-rewrites'\nimport { getRouteMatcher } from './utils/route-matcher'\nimport { getRouteRegex } from './utils/route-regex'\nimport escapePathDelimiters from './utils/escape-path-delimiters'\n\ninterface TransitionOptions {\n  shallow?: boolean\n  locale?: string | false\n}\n\ninterface NextHistoryState {\n  url: string\n  as: string\n  options: TransitionOptions\n}\n\ntype HistoryState = null | { __N: false } | ({ __N: true } & NextHistoryState)\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nfunction buildCancellationError() {\n  return Object.assign(new Error('Route Cancelled'), {\n    cancelled: true,\n  })\n}\n\nfunction addPathPrefix(path: string, prefix?: string) {\n  return prefix && path.startsWith('/')\n    ? path === '/'\n      ? normalizePathTrailingSlash(prefix)\n      : `${prefix}${path}`\n    : path\n}\n\nexport function addLocale(\n  path: string,\n  locale?: string | false,\n  defaultLocale?: string\n) {\n  if (process.env.__NEXT_I18N_SUPPORT) {\n    return locale &&\n      locale !== defaultLocale &&\n      !path.startsWith('/' + locale + '/') &&\n      path !== '/' + locale\n      ? addPathPrefix(path, '/' + locale)\n      : path\n  }\n  return path\n}\n\nexport function delLocale(path: string, locale?: string) {\n  if (process.env.__NEXT_I18N_SUPPORT) {\n    return locale &&\n      (path.startsWith('/' + locale + '/') || path === '/' + locale)\n      ? path.substr(locale.length + 1) || '/'\n      : path\n  }\n  return path\n}\n\nexport function hasBasePath(path: string): boolean {\n  return path === basePath || path.startsWith(basePath + '/')\n}\n\nexport function addBasePath(path: string): string {\n  // we only add the basepath on relative urls\n  return addPathPrefix(path, basePath)\n}\n\nexport function delBasePath(path: string): string {\n  return path.slice(basePath.length) || '/'\n}\n\n/**\n * Detects whether a given url is routable by the Next.js router (browser only).\n */\nexport function isLocalURL(url: string): boolean {\n  if (url.startsWith('/')) return true\n  try {\n    // absolute urls can be local if they are on the same origin\n    const locationOrigin = getLocationOrigin()\n    const resolved = new URL(url, locationOrigin)\n    return resolved.origin === locationOrigin && hasBasePath(resolved.pathname)\n  } catch (_) {\n    return false\n  }\n}\n\ntype Url = UrlObject | string\n\nexport function interpolateAs(\n  route: string,\n  asPathname: string,\n  query: ParsedUrlQuery\n) {\n  let interpolatedRoute = ''\n\n  const dynamicRegex = getRouteRegex(route)\n  const dynamicGroups = dynamicRegex.groups\n  const dynamicMatches =\n    // Try to match the dynamic route against the asPath\n    (asPathname !== route ? getRouteMatcher(dynamicRegex)(asPathname) : '') ||\n    // Fall back to reading the values from the href\n    // TODO: should this take priority; also need to change in the router.\n    query\n\n  interpolatedRoute = route\n  const params = Object.keys(dynamicGroups)\n\n  if (\n    !params.every((param) => {\n      let value = dynamicMatches[param] || ''\n      const { repeat, optional } = dynamicGroups[param]\n\n      // support single-level catch-all\n      // TODO: more robust handling for user-error (passing `/`)\n      let replaced = `[${repeat ? '...' : ''}${param}]`\n      if (optional) {\n        replaced = `${!value ? '/' : ''}[${replaced}]`\n      }\n      if (repeat && !Array.isArray(value)) value = [value]\n\n      return (\n        (optional || param in dynamicMatches) &&\n        // Interpolate group into data URL if present\n        (interpolatedRoute =\n          interpolatedRoute!.replace(\n            replaced,\n            repeat\n              ? (value as string[]).map(escapePathDelimiters).join('/')\n              : escapePathDelimiters(value as string)\n          ) || '/')\n      )\n    })\n  ) {\n    interpolatedRoute = '' // did not satisfy all requirements\n\n    // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n  }\n  return {\n    params,\n    result: interpolatedRoute,\n  }\n}\n\nfunction omitParmsFromQuery(query: ParsedUrlQuery, params: string[]) {\n  const filteredQuery: ParsedUrlQuery = {}\n\n  Object.keys(query).forEach((key) => {\n    if (!params.includes(key)) {\n      filteredQuery[key] = query[key]\n    }\n  })\n  return filteredQuery\n}\n\n/**\n * Resolves a given hyperlink with a certain router state (basePath not included).\n * Preserves absolute urls.\n */\nexport function resolveHref(\n  currentPath: string,\n  href: Url,\n  resolveAs?: boolean\n): string {\n  // we use a dummy base url for relative urls\n  const base = new URL(currentPath, 'http://n')\n  const urlAsString =\n    typeof href === 'string' ? href : formatWithValidation(href)\n  try {\n    const finalUrl = new URL(urlAsString, base)\n    finalUrl.pathname = normalizePathTrailingSlash(finalUrl.pathname)\n    let interpolatedAs = ''\n\n    if (\n      isDynamicRoute(finalUrl.pathname) &&\n      finalUrl.searchParams &&\n      resolveAs\n    ) {\n      const query = searchParamsToUrlQuery(finalUrl.searchParams)\n\n      const { result, params } = interpolateAs(\n        finalUrl.pathname,\n        finalUrl.pathname,\n        query\n      )\n\n      if (result) {\n        interpolatedAs = formatWithValidation({\n          pathname: result,\n          hash: finalUrl.hash,\n          query: omitParmsFromQuery(query, params),\n        })\n      }\n    }\n\n    // if the origin didn't change, it means we received a relative href\n    const resolvedHref =\n      finalUrl.origin === base.origin\n        ? finalUrl.href.slice(finalUrl.origin.length)\n        : finalUrl.href\n\n    return (resolveAs\n      ? [resolvedHref, interpolatedAs || resolvedHref]\n      : resolvedHref) as string\n  } catch (_) {\n    return (resolveAs ? [urlAsString] : urlAsString) as string\n  }\n}\n\nconst PAGE_LOAD_ERROR = Symbol('PAGE_LOAD_ERROR')\nexport function markLoadingError(err: Error): Error {\n  return Object.defineProperty(err, PAGE_LOAD_ERROR, {})\n}\n\nfunction prepareUrlAs(router: NextRouter, url: Url, as: Url) {\n  // If url and as provided as an object representation,\n  // we'll format them into the string version here.\n  return {\n    url: addBasePath(resolveHref(router.pathname, url)),\n    as: as ? addBasePath(resolveHref(router.pathname, as)) : as,\n  }\n}\n\nexport type BaseRouter = {\n  route: string\n  pathname: string\n  query: ParsedUrlQuery\n  asPath: string\n  basePath: string\n  locale?: string\n  locales?: string[]\n  defaultLocale?: string\n}\n\nexport type NextRouter = BaseRouter &\n  Pick<\n    Router,\n    | 'push'\n    | 'replace'\n    | 'reload'\n    | 'back'\n    | 'prefetch'\n    | 'beforePopState'\n    | 'events'\n    | 'isFallback'\n  >\n\nexport type PrefetchOptions = {\n  priority?: boolean\n  locale?: string | false\n}\n\nexport type PrivateRouteInfo = {\n  Component: ComponentType\n  styleSheets: StyleSheetTuple[]\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n  props?: Record<string, any>\n  err?: Error\n  error?: any\n}\n\nexport type AppProps = Pick<PrivateRouteInfo, 'Component' | 'err'> & {\n  router: Router\n} & Record<string, any>\nexport type AppComponent = ComponentType<AppProps>\n\ntype Subscription = (data: PrivateRouteInfo, App: AppComponent) => Promise<void>\n\ntype BeforePopStateCallback = (state: NextHistoryState) => boolean\n\ntype ComponentLoadCancel = (() => void) | null\n\ntype HistoryMethod = 'replaceState' | 'pushState'\n\nconst manualScrollRestoration =\n  process.env.__NEXT_SCROLL_RESTORATION &&\n  typeof window !== 'undefined' &&\n  'scrollRestoration' in window.history\n\nconst SSG_DATA_NOT_FOUND_ERROR = 'SSG Data NOT_FOUND'\n\nfunction fetchRetry(url: string, attempts: number): Promise<any> {\n  return fetch(url, {\n    // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n    // Cookies may also be required for `getServerSideProps`.\n    //\n    // > `fetch` won’t send cookies, unless you set the credentials init\n    // > option.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n    //\n    // > For maximum browser compatibility when it comes to sending &\n    // > receiving cookies, always supply the `credentials: 'same-origin'`\n    // > option instead of relying on the default.\n    // https://github.com/github/fetch#caveats\n    credentials: 'same-origin',\n  }).then((res) => {\n    if (!res.ok) {\n      if (attempts > 1 && res.status >= 500) {\n        return fetchRetry(url, attempts - 1)\n      }\n      if (res.status === 404) {\n        // TODO: handle reloading in development from fallback returning 200\n        // to on-demand-entry-handler causing it to reload periodically\n        throw new Error(SSG_DATA_NOT_FOUND_ERROR)\n      }\n      throw new Error(`Failed to load static props`)\n    }\n    return res.json()\n  })\n}\n\nfunction fetchNextData(dataHref: string, isServerRender: boolean) {\n  return fetchRetry(dataHref, isServerRender ? 3 : 1).catch((err: Error) => {\n    // We should only trigger a server-side transition if this was caused\n    // on a client-side transition. Otherwise, we'd get into an infinite\n    // loop.\n\n    if (!isServerRender) {\n      markLoadingError(err)\n    }\n    throw err\n  })\n}\n\nexport default class Router implements BaseRouter {\n  route: string\n  pathname: string\n  query: ParsedUrlQuery\n  asPath: string\n  basePath: string\n\n  /**\n   * Map of all components loaded in `Router`\n   */\n  components: { [pathname: string]: PrivateRouteInfo }\n  // Static Data Cache\n  sdc: { [asPath: string]: object } = {}\n  sub: Subscription\n  clc: ComponentLoadCancel\n  pageLoader: any\n  _bps: BeforePopStateCallback | undefined\n  events: MittEmitter\n  _wrapApp: (App: AppComponent) => any\n  isSsr: boolean\n  isFallback: boolean\n  _inFlightRoute?: string\n  _shallow?: boolean\n  locale?: string\n  locales?: string[]\n  defaultLocale?: string\n\n  static events: MittEmitter = mitt()\n\n  constructor(\n    pathname: string,\n    query: ParsedUrlQuery,\n    as: string,\n    {\n      initialProps,\n      pageLoader,\n      App,\n      wrapApp,\n      Component,\n      initialStyleSheets,\n      err,\n      subscription,\n      isFallback,\n      locale,\n      locales,\n      defaultLocale,\n    }: {\n      subscription: Subscription\n      initialProps: any\n      pageLoader: any\n      Component: ComponentType\n      initialStyleSheets: StyleSheetTuple[]\n      App: AppComponent\n      wrapApp: (App: AppComponent) => any\n      err?: Error\n      isFallback: boolean\n      locale?: string\n      locales?: string[]\n      defaultLocale?: string\n    }\n  ) {\n    // represents the current component key\n    this.route = removePathTrailingSlash(pathname)\n\n    // set up the component cache (by route keys)\n    this.components = {}\n    // We should not keep the cache, if there's an error\n    // Otherwise, this cause issues when when going back and\n    // come again to the errored page.\n    if (pathname !== '/_error') {\n      this.components[this.route] = {\n        Component,\n        styleSheets: initialStyleSheets,\n        props: initialProps,\n        err,\n        __N_SSG: initialProps && initialProps.__N_SSG,\n        __N_SSP: initialProps && initialProps.__N_SSP,\n      }\n    }\n\n    this.components['/_app'] = {\n      Component: App as ComponentType,\n      styleSheets: [\n        /* /_app does not need its stylesheets managed */\n      ],\n    }\n\n    // Backwards compat for Router.router.events\n    // TODO: Should be remove the following major version as it was never documented\n    this.events = Router.events\n\n    this.pageLoader = pageLoader\n    this.pathname = pathname\n    this.query = query\n    // if auto prerendered and dynamic route wait to update asPath\n    // until after mount to prevent hydration mismatch\n    this.asPath =\n      // @ts-ignore this is temporarily global (attached to window)\n      isDynamicRoute(pathname) && __NEXT_DATA__.autoExport ? pathname : as\n    this.basePath = basePath\n    this.sub = subscription\n    this.clc = null\n    this._wrapApp = wrapApp\n    // make sure to ignore extra popState in safari on navigating\n    // back from external site\n    this.isSsr = true\n\n    this.isFallback = isFallback\n\n    if (process.env.__NEXT_I18N_SUPPORT) {\n      this.locale = locale\n      this.locales = locales\n      this.defaultLocale = defaultLocale\n    }\n\n    if (typeof window !== 'undefined') {\n      // make sure \"as\" doesn't start with double slashes or else it can\n      // throw an error as it's considered invalid\n      if (as.substr(0, 2) !== '//') {\n        // in order for `e.state` to work on the `onpopstate` event\n        // we have to register the initial route upon initialization\n        this.changeState(\n          'replaceState',\n          formatWithValidation({ pathname: addBasePath(pathname), query }),\n          getURL()\n        )\n      }\n\n      window.addEventListener('popstate', this.onPopState)\n\n      // enable custom scroll restoration handling when available\n      // otherwise fallback to browser's default handling\n      if (process.env.__NEXT_SCROLL_RESTORATION) {\n        if (manualScrollRestoration) {\n          window.history.scrollRestoration = 'manual'\n\n          let scrollDebounceTimeout: undefined | NodeJS.Timeout\n\n          const debouncedScrollSave = () => {\n            if (scrollDebounceTimeout) clearTimeout(scrollDebounceTimeout)\n\n            scrollDebounceTimeout = setTimeout(() => {\n              const { url, as: curAs, options } = history.state\n              this.changeState(\n                'replaceState',\n                url,\n                curAs,\n                Object.assign({}, options, {\n                  _N_X: window.scrollX,\n                  _N_Y: window.scrollY,\n                })\n              )\n            }, 10)\n          }\n\n          window.addEventListener('scroll', debouncedScrollSave)\n        }\n      }\n    }\n  }\n\n  onPopState = (e: PopStateEvent): void => {\n    const state = e.state as HistoryState\n\n    if (!state) {\n      // We get state as undefined for two reasons.\n      //  1. With older safari (< 8) and older chrome (< 34)\n      //  2. When the URL changed with #\n      //\n      // In the both cases, we don't need to proceed and change the route.\n      // (as it's already changed)\n      // But we can simply replace the state with the new changes.\n      // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n      // So, doing the following for (1) does no harm.\n      const { pathname, query } = this\n      this.changeState(\n        'replaceState',\n        formatWithValidation({ pathname: addBasePath(pathname), query }),\n        getURL()\n      )\n      return\n    }\n\n    if (!state.__N) {\n      return\n    }\n\n    const { url, as, options } = state\n\n    const { pathname } = parseRelativeUrl(url)\n\n    // Make sure we don't re-render on initial load,\n    // can be caused by navigating back from an external site\n    if (this.isSsr && as === this.asPath && pathname === this.pathname) {\n      return\n    }\n\n    // If the downstream application returns falsy, return.\n    // They will then be responsible for handling the event.\n    if (this._bps && !this._bps(state)) {\n      return\n    }\n\n    this.change(\n      'replaceState',\n      url,\n      as,\n      Object.assign({}, options, {\n        shallow: options.shallow && this._shallow,\n        locale: options.locale || this.defaultLocale,\n      })\n    )\n  }\n\n  reload(): void {\n    window.location.reload()\n  }\n\n  /**\n   * Go back in history\n   */\n  back() {\n    window.history.back()\n  }\n\n  /**\n   * Performs a `pushState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */\n  push(url: Url, as: Url = url, options: TransitionOptions = {}) {\n    ;({ url, as } = prepareUrlAs(this, url, as))\n    return this.change('pushState', url, as, options)\n  }\n\n  /**\n   * Performs a `replaceState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */\n  replace(url: Url, as: Url = url, options: TransitionOptions = {}) {\n    ;({ url, as } = prepareUrlAs(this, url, as))\n    return this.change('replaceState', url, as, options)\n  }\n\n  async change(\n    method: HistoryMethod,\n    url: string,\n    as: string,\n    options: TransitionOptions\n  ): Promise<boolean> {\n    if (!isLocalURL(url)) {\n      window.location.href = url\n      return false\n    }\n\n    if (process.env.__NEXT_I18N_SUPPORT) {\n      this.locale = options.locale || this.locale\n\n      if (typeof options.locale === 'undefined') {\n        options.locale = this.locale\n      }\n\n      const {\n        normalizeLocalePath,\n      } = require('../i18n/normalize-locale-path') as typeof import('../i18n/normalize-locale-path')\n\n      const localePathResult = normalizeLocalePath(as, this.locales)\n\n      if (localePathResult.detectedLocale) {\n        this.locale = localePathResult.detectedLocale\n        url = localePathResult.pathname\n      }\n    }\n\n    if (!(options as any)._h) {\n      this.isSsr = false\n    }\n    // marking route changes as a navigation start entry\n    if (ST) {\n      performance.mark('routeChange')\n    }\n\n    if (this._inFlightRoute) {\n      this.abortComponentLoad(this._inFlightRoute)\n    }\n\n    as = addLocale(as, options.locale, this.defaultLocale)\n    const cleanedAs = delLocale(\n      hasBasePath(as) ? delBasePath(as) : as,\n      this.locale\n    )\n    this._inFlightRoute = as\n\n    // If the url change is only related to a hash change\n    // We should not proceed. We should only change the state.\n\n    // WARNING: `_h` is an internal option for handing Next.js client-side\n    // hydration. Your app should _never_ use this property. It may change at\n    // any time without notice.\n    if (!(options as any)._h && this.onlyAHashChange(cleanedAs)) {\n      this.asPath = cleanedAs\n      Router.events.emit('hashChangeStart', as)\n      // TODO: do we need the resolved href when only a hash change?\n      this.changeState(method, url, as, options)\n      this.scrollToHash(cleanedAs)\n      this.notify(this.components[this.route])\n      Router.events.emit('hashChangeComplete', as)\n      return true\n    }\n\n    // The build manifest needs to be loaded before auto-static dynamic pages\n    // get their query parameters to allow ensuring they can be parsed properly\n    // when rewritten to\n    const pages = await this.pageLoader.getPageList()\n    const { __rewrites: rewrites } = await this.pageLoader.promisedBuildManifest\n\n    let parsed = parseRelativeUrl(url)\n\n    let { pathname, query } = parsed\n\n    parsed = this._resolveHref(parsed, pages) as typeof parsed\n\n    if (parsed.pathname !== pathname) {\n      pathname = parsed.pathname\n      url = formatWithValidation(parsed)\n    }\n\n    // url and as should always be prefixed with basePath by this\n    // point by either next/link or router.push/replace so strip the\n    // basePath from the pathname to match the pages dir 1-to-1\n    pathname = pathname\n      ? removePathTrailingSlash(delBasePath(pathname))\n      : pathname\n\n    // If asked to change the current URL we should reload the current page\n    // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n    // We also need to set the method = replaceState always\n    // as this should not go into the history (That's how browsers work)\n    // We should compare the new asPath to the current asPath, not the url\n    if (!this.urlIsNew(cleanedAs)) {\n      method = 'replaceState'\n    }\n\n    let route = removePathTrailingSlash(pathname)\n    const { shallow = false } = options\n\n    // we need to resolve the as value using rewrites for dynamic SSG\n    // pages to allow building the data URL correctly\n    let resolvedAs = as\n\n    if (process.env.__NEXT_HAS_REWRITES) {\n      resolvedAs = resolveRewrites(\n        parseRelativeUrl(as).pathname,\n        pages,\n        basePath,\n        rewrites,\n        query,\n        (p: string) => this._resolveHref({ pathname: p }, pages).pathname!\n      )\n\n      if (resolvedAs !== as) {\n        const potentialHref = removePathTrailingSlash(\n          this._resolveHref(\n            Object.assign({}, parsed, { pathname: resolvedAs }),\n            pages,\n            false\n          ).pathname!\n        )\n\n        // if this directly matches a page we need to update the href to\n        // allow the correct page chunk to be loaded\n        if (pages.includes(potentialHref)) {\n          route = potentialHref\n          pathname = potentialHref\n          parsed.pathname = pathname\n          url = formatWithValidation(parsed)\n        }\n      }\n    }\n    resolvedAs = delLocale(delBasePath(resolvedAs), this.locale)\n\n    if (isDynamicRoute(route)) {\n      const parsedAs = parseRelativeUrl(resolvedAs)\n      const asPathname = parsedAs.pathname\n\n      const routeRegex = getRouteRegex(route)\n      const routeMatch = getRouteMatcher(routeRegex)(asPathname)\n      const shouldInterpolate = route === asPathname\n      const interpolatedAs = shouldInterpolate\n        ? interpolateAs(route, asPathname, query)\n        : ({} as { result: undefined; params: undefined })\n\n      if (!routeMatch || (shouldInterpolate && !interpolatedAs.result)) {\n        const missingParams = Object.keys(routeRegex.groups).filter(\n          (param) => !query[param]\n        )\n\n        if (missingParams.length > 0) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(\n              `${\n                shouldInterpolate\n                  ? `Interpolating href`\n                  : `Mismatching \\`as\\` and \\`href\\``\n              } failed to manually provide ` +\n                `the params: ${missingParams.join(\n                  ', '\n                )} in the \\`href\\`'s \\`query\\``\n            )\n          }\n\n          throw new Error(\n            (shouldInterpolate\n              ? `The provided \\`href\\` (${url}) value is missing query values (${missingParams.join(\n                  ', '\n                )}) to be interpolated properly. `\n              : `The provided \\`as\\` value (${asPathname}) is incompatible with the \\`href\\` value (${route}). `) +\n              `Read more: https://err.sh/vercel/next.js/${\n                shouldInterpolate\n                  ? 'href-interpolation-failed'\n                  : 'incompatible-href-as'\n              }`\n          )\n        }\n      } else if (shouldInterpolate) {\n        as = formatWithValidation(\n          Object.assign({}, parsedAs, {\n            pathname: interpolatedAs.result,\n            query: omitParmsFromQuery(query, interpolatedAs.params!),\n          })\n        )\n      } else {\n        // Merge params into `query`, overwriting any specified in search\n        Object.assign(query, routeMatch)\n      }\n    }\n\n    Router.events.emit('routeChangeStart', as)\n\n    try {\n      const routeInfo = await this.getRouteInfo(\n        route,\n        pathname,\n        query,\n        as,\n        shallow\n      )\n      let { error, props, __N_SSG, __N_SSP } = routeInfo\n\n      // handle redirect on client-transition\n      if (\n        (__N_SSG || __N_SSP) &&\n        props &&\n        (props as any).pageProps &&\n        (props as any).pageProps.__N_REDIRECT\n      ) {\n        const destination = (props as any).pageProps.__N_REDIRECT\n\n        // check if destination is internal (resolves to a page) and attempt\n        // client-navigation if it is falling back to hard navigation if\n        // it's not\n        if (destination.startsWith('/')) {\n          const parsedHref = parseRelativeUrl(destination)\n          this._resolveHref(parsedHref, pages)\n\n          if (pages.includes(parsedHref.pathname)) {\n            return this.change(method, destination, destination, options)\n          }\n        }\n\n        window.location.href = destination\n        return new Promise(() => {})\n      }\n\n      Router.events.emit('beforeHistoryChange', as)\n      this.changeState(\n        method,\n        url,\n        addLocale(as, options.locale, this.defaultLocale),\n        options\n      )\n\n      if (process.env.NODE_ENV !== 'production') {\n        const appComp: any = this.components['/_app'].Component\n        ;(window as any).next.isPrerendered =\n          appComp.getInitialProps === appComp.origGetInitialProps &&\n          !(routeInfo.Component as any).getInitialProps\n      }\n\n      await this.set(route, pathname!, query, cleanedAs, routeInfo).catch(\n        (e) => {\n          if (e.cancelled) error = error || e\n          else throw e\n        }\n      )\n\n      if (error) {\n        Router.events.emit('routeChangeError', error, cleanedAs)\n        throw error\n      }\n\n      if (process.env.__NEXT_SCROLL_RESTORATION) {\n        if (manualScrollRestoration && '_N_X' in options) {\n          window.scrollTo((options as any)._N_X, (options as any)._N_Y)\n        }\n      }\n\n      if (process.env.__NEXT_I18N_SUPPORT) {\n        if (this.locale) {\n          document.documentElement.lang = this.locale\n        }\n      }\n      Router.events.emit('routeChangeComplete', as)\n\n      return true\n    } catch (err) {\n      if (err.cancelled) {\n        return false\n      }\n      throw err\n    }\n  }\n\n  changeState(\n    method: HistoryMethod,\n    url: string,\n    as: string,\n    options: TransitionOptions = {}\n  ): void {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof window.history === 'undefined') {\n        console.error(`Warning: window.history is not available.`)\n        return\n      }\n\n      if (typeof window.history[method] === 'undefined') {\n        console.error(`Warning: window.history.${method} is not available`)\n        return\n      }\n    }\n\n    if (method !== 'pushState' || getURL() !== as) {\n      this._shallow = options.shallow\n      window.history[method](\n        {\n          url,\n          as,\n          options,\n          __N: true,\n        } as HistoryState,\n        // Most browsers currently ignores this parameter, although they may use it in the future.\n        // Passing the empty string here should be safe against future changes to the method.\n        // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n        '',\n        as\n      )\n    }\n  }\n\n  async handleRouteInfoError(\n    err: Error & { code: any; cancelled: boolean },\n    pathname: string,\n    query: ParsedUrlQuery,\n    as: string,\n    loadErrorFail?: boolean\n  ): Promise<PrivateRouteInfo> {\n    if (err.cancelled) {\n      // bubble up cancellation errors\n      throw err\n    }\n\n    if (PAGE_LOAD_ERROR in err || loadErrorFail) {\n      Router.events.emit('routeChangeError', err, as)\n\n      // If we can't load the page it could be one of following reasons\n      //  1. Page doesn't exists\n      //  2. Page does exist in a different zone\n      //  3. Internal error while loading the page\n\n      // So, doing a hard reload is the proper way to deal with this.\n      window.location.href = as\n\n      // Changing the URL doesn't block executing the current code path.\n      // So let's throw a cancellation error stop the routing logic.\n      throw buildCancellationError()\n    }\n\n    try {\n      let Component: ComponentType\n      let styleSheets: StyleSheetTuple[]\n      let props: Record<string, any> | undefined\n      const ssg404 = err.message === SSG_DATA_NOT_FOUND_ERROR\n\n      if (ssg404) {\n        try {\n          let mod: any\n          ;({ page: Component, styleSheets, mod } = await this.fetchComponent(\n            '/404'\n          ))\n\n          // TODO: should we tolerate these props missing and still render the\n          // page instead of falling back to _error?\n          if (mod && mod.__N_SSG) {\n            props = await this._getStaticData(\n              this.pageLoader.getDataHref('/404', '/404', true, this.locale)\n            )\n          }\n        } catch (_err) {\n          // non-fatal fallback to _error\n        }\n      }\n\n      if (\n        typeof Component! === 'undefined' ||\n        typeof styleSheets! === 'undefined'\n      ) {\n        ;({ page: Component, styleSheets } = await this.fetchComponent(\n          '/_error'\n        ))\n      }\n\n      const routeInfo: PrivateRouteInfo = {\n        props,\n        Component,\n        styleSheets,\n        err: ssg404 ? undefined : err,\n        error: ssg404 ? undefined : err,\n      }\n\n      if (!routeInfo.props) {\n        try {\n          routeInfo.props = await this.getInitialProps(Component, {\n            err,\n            pathname,\n            query,\n          } as any)\n        } catch (gipErr) {\n          console.error('Error in error page `getInitialProps`: ', gipErr)\n          routeInfo.props = {}\n        }\n      }\n\n      return routeInfo\n    } catch (routeInfoErr) {\n      return this.handleRouteInfoError(routeInfoErr, pathname, query, as, true)\n    }\n  }\n\n  async getRouteInfo(\n    route: string,\n    pathname: string,\n    query: any,\n    as: string,\n    shallow: boolean = false\n  ): Promise<PrivateRouteInfo> {\n    try {\n      const cachedRouteInfo = this.components[route]\n\n      if (shallow && cachedRouteInfo && this.route === route) {\n        return cachedRouteInfo\n      }\n\n      const routeInfo: PrivateRouteInfo = cachedRouteInfo\n        ? cachedRouteInfo\n        : await this.fetchComponent(route).then((res) => ({\n            Component: res.page,\n            styleSheets: res.styleSheets,\n            __N_SSG: res.mod.__N_SSG,\n            __N_SSP: res.mod.__N_SSP,\n          }))\n\n      const { Component, __N_SSG, __N_SSP } = routeInfo\n\n      if (process.env.NODE_ENV !== 'production') {\n        const { isValidElementType } = require('react-is')\n        if (!isValidElementType(Component)) {\n          throw new Error(\n            `The default export is not a React Component in page: \"${pathname}\"`\n          )\n        }\n      }\n\n      let dataHref: string | undefined\n\n      if (__N_SSG || __N_SSP) {\n        dataHref = this.pageLoader.getDataHref(\n          formatWithValidation({ pathname, query }),\n          delBasePath(as),\n          __N_SSG,\n          this.locale\n        )\n      }\n\n      const props = await this._getData<PrivateRouteInfo>(() =>\n        __N_SSG\n          ? this._getStaticData(dataHref!)\n          : __N_SSP\n          ? this._getServerData(dataHref!)\n          : this.getInitialProps(\n              Component,\n              // we provide AppTree later so this needs to be `any`\n              {\n                pathname,\n                query,\n                asPath: as,\n              } as any\n            )\n      )\n\n      routeInfo.props = props\n      this.components[route] = routeInfo\n      return routeInfo\n    } catch (err) {\n      return this.handleRouteInfoError(err, pathname, query, as)\n    }\n  }\n\n  set(\n    route: string,\n    pathname: string,\n    query: ParsedUrlQuery,\n    as: string,\n    data: PrivateRouteInfo\n  ): Promise<void> {\n    this.isFallback = false\n\n    this.route = route\n    this.pathname = pathname\n    this.query = query\n    this.asPath = as\n    return this.notify(data)\n  }\n\n  /**\n   * Callback to execute before replacing router state\n   * @param cb callback to be executed\n   */\n  beforePopState(cb: BeforePopStateCallback) {\n    this._bps = cb\n  }\n\n  onlyAHashChange(as: string): boolean {\n    if (!this.asPath) return false\n    const [oldUrlNoHash, oldHash] = this.asPath.split('#')\n    const [newUrlNoHash, newHash] = as.split('#')\n\n    // Makes sure we scroll to the provided hash if the url/hash are the same\n    if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n      return true\n    }\n\n    // If the urls are change, there's more than a hash change\n    if (oldUrlNoHash !== newUrlNoHash) {\n      return false\n    }\n\n    // If the hash has changed, then it's a hash only change.\n    // This check is necessary to handle both the enter and\n    // leave hash === '' cases. The identity case falls through\n    // and is treated as a next reload.\n    return oldHash !== newHash\n  }\n\n  scrollToHash(as: string): void {\n    const [, hash] = as.split('#')\n    // Scroll to top if the hash is just `#` with no value\n    if (hash === '') {\n      window.scrollTo(0, 0)\n      return\n    }\n\n    // First we check if the element by id is found\n    const idEl = document.getElementById(hash)\n    if (idEl) {\n      idEl.scrollIntoView()\n      return\n    }\n    // If there's no element with the id, we check the `name` property\n    // To mirror browsers\n    const nameEl = document.getElementsByName(hash)[0]\n    if (nameEl) {\n      nameEl.scrollIntoView()\n    }\n  }\n\n  urlIsNew(asPath: string): boolean {\n    return this.asPath !== asPath\n  }\n\n  _resolveHref(parsedHref: UrlObject, pages: string[], applyBasePath = true) {\n    const { pathname } = parsedHref\n    const cleanPathname = removePathTrailingSlash(\n      denormalizePagePath(applyBasePath ? delBasePath(pathname!) : pathname!)\n    )\n\n    if (cleanPathname === '/404' || cleanPathname === '/_error') {\n      return parsedHref\n    }\n\n    // handle resolving href for dynamic routes\n    if (!pages.includes(cleanPathname!)) {\n      // eslint-disable-next-line array-callback-return\n      pages.some((page) => {\n        if (\n          isDynamicRoute(page) &&\n          getRouteRegex(page).re.test(cleanPathname!)\n        ) {\n          parsedHref.pathname = applyBasePath ? addBasePath(page) : page\n          return true\n        }\n      })\n    }\n    return parsedHref\n  }\n\n  /**\n   * Prefetch page code, you may wait for the data during page rendering.\n   * This feature only works in production!\n   * @param url the href of prefetched page\n   * @param asPath the as path of the prefetched page\n   */\n  async prefetch(\n    url: string,\n    asPath: string = url,\n    options: PrefetchOptions = {}\n  ): Promise<void> {\n    let parsed = parseRelativeUrl(url)\n\n    let { pathname } = parsed\n\n    if (process.env.__NEXT_I18N_SUPPORT) {\n      const normalizeLocalePath = require('../i18n/normalize-locale-path')\n        .normalizeLocalePath as typeof import('../i18n/normalize-locale-path').normalizeLocalePath\n\n      if (options.locale === false) {\n        pathname = normalizeLocalePath!(pathname, this.locales).pathname\n        parsed.pathname = pathname\n        url = formatWithValidation(parsed)\n\n        let parsedAs = parseRelativeUrl(asPath)\n        const localePathResult = normalizeLocalePath!(\n          parsedAs.pathname,\n          this.locales\n        )\n        parsedAs.pathname = localePathResult.pathname\n        options.locale = localePathResult.detectedLocale || options.locale\n        asPath = formatWithValidation(parsedAs)\n      }\n    }\n\n    const pages = await this.pageLoader.getPageList()\n\n    parsed = this._resolveHref(parsed, pages) as typeof parsed\n\n    if (parsed.pathname !== pathname) {\n      pathname = parsed.pathname\n      url = formatWithValidation(parsed)\n    }\n\n    // Prefetch is not supported in development mode because it would trigger on-demand-entries\n    if (process.env.NODE_ENV !== 'production') {\n      return\n    }\n\n    const route = removePathTrailingSlash(pathname)\n    await Promise.all([\n      this.pageLoader.prefetchData(\n        url,\n        asPath,\n        typeof options.locale !== 'undefined' ? options.locale : this.locale,\n        this.defaultLocale\n      ),\n      this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route),\n    ])\n  }\n\n  async fetchComponent(route: string): Promise<GoodPageCache> {\n    let cancelled = false\n    const cancel = (this.clc = () => {\n      cancelled = true\n    })\n\n    const componentResult = await this.pageLoader.loadPage(route)\n\n    if (cancelled) {\n      const error: any = new Error(\n        `Abort fetching component for route: \"${route}\"`\n      )\n      error.cancelled = true\n      throw error\n    }\n\n    if (cancel === this.clc) {\n      this.clc = null\n    }\n\n    return componentResult\n  }\n\n  _getData<T>(fn: () => Promise<T>): Promise<T> {\n    let cancelled = false\n    const cancel = () => {\n      cancelled = true\n    }\n    this.clc = cancel\n    return fn().then((data) => {\n      if (cancel === this.clc) {\n        this.clc = null\n      }\n\n      if (cancelled) {\n        const err: any = new Error('Loading initial props cancelled')\n        err.cancelled = true\n        throw err\n      }\n\n      return data\n    })\n  }\n\n  _getStaticData(dataHref: string): Promise<object> {\n    const { href: cacheKey } = new URL(dataHref, window.location.href)\n    if (process.env.NODE_ENV === 'production' && this.sdc[cacheKey]) {\n      return Promise.resolve(this.sdc[cacheKey])\n    }\n    return fetchNextData(dataHref, this.isSsr).then((data) => {\n      this.sdc[cacheKey] = data\n      return data\n    })\n  }\n\n  _getServerData(dataHref: string): Promise<object> {\n    return fetchNextData(dataHref, this.isSsr)\n  }\n\n  getInitialProps(\n    Component: ComponentType,\n    ctx: NextPageContext\n  ): Promise<any> {\n    const { Component: App } = this.components['/_app']\n    const AppTree = this._wrapApp(App as AppComponent)\n    ctx.AppTree = AppTree\n    return loadGetInitialProps<AppContextType<Router>>(App, {\n      AppTree,\n      Component,\n      router: this,\n      ctx,\n    })\n  }\n\n  abortComponentLoad(as: string): void {\n    if (this.clc) {\n      Router.events.emit('routeChangeError', buildCancellationError(), as)\n      this.clc()\n      this.clc = null\n    }\n  }\n\n  notify(data: PrivateRouteInfo): Promise<void> {\n    return this.sub(data, this.components['/_app'].Component as AppComponent)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}