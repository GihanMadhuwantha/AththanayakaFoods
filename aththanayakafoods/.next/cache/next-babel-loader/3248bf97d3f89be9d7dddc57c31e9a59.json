{"ast":null,"code":"import connectDB from '../../../utils/connectDB';\nimport Categories from '../../../models/categoriesModel';\nimport auth from '../../../middleware/auth';\nconnectDB();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"POST\":\n      await createCategory(req, res);\n      break;\n    case \"GET\":\n      await getCategories(req, res);\n      break;\n  }\n});\nconst createCategory = async (req, res) => {\n  try {\n    const result = await auth(req, res);\n    if (result.role !== 'admin') return res.status(400).json({\n      err: \"Authentication is not valid.\"\n    });\n    const {\n      name\n    } = req.body;\n    if (!name) return res.status(400).json({\n      err: \"Name can not be left blank.\"\n    });\n    const newCategory = new Categories({\n      name\n    });\n    await newCategory.save();\n    res.json({\n      msg: 'Success! Created a new category.',\n      newCategory\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};\nconst getCategories = async (req, res) => {\n  try {\n    const categories = await Categories.find();\n    res.json({\n      categories\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};","map":{"version":3,"names":["connectDB","Categories","auth","req","res","method","createCategory","getCategories","result","role","status","json","err","name","body","newCategory","save","msg","message","categories","find"],"sources":["C:/Users/gihanmadhuwantha/Desktop/system_Development/AththanayakaFoods/aththanayakafoods/pages/api/categories/index.js"],"sourcesContent":["import connectDB from '../../../utils/connectDB'\r\nimport Categories from '../../../models/categoriesModel'\r\nimport auth from '../../../middleware/auth'\r\n\r\nconnectDB()\r\n\r\nexport default async (req, res) => {\r\n    switch(req.method){\r\n        case \"POST\":\r\n            await createCategory(req, res)\r\n            break;\r\n        case \"GET\":\r\n            await getCategories(req, res)\r\n            break;\r\n    }\r\n}\r\n\r\nconst createCategory = async (req, res) => {\r\n    try {\r\n        const result = await auth(req, res)\r\n        if(result.role !== 'admin')\r\n        return res.status(400).json({err: \"Authentication is not valid.\"})\r\n\r\n        const { name } = req.body\r\n        if(!name) return res.status(400).json({err: \"Name can not be left blank.\"})\r\n\r\n        const newCategory = new Categories({name})\r\n\r\n        await newCategory.save()\r\n        res.json({\r\n            msg: 'Success! Created a new category.',\r\n            newCategory\r\n        })\r\n\r\n    } catch (err) {\r\n        return res.status(500).json({err: err.message})\r\n    }\r\n}\r\n\r\nconst getCategories = async (req, res) => {\r\n    try {\r\n        const categories = await Categories.find()\r\n\r\n        res.json({categories})\r\n\r\n    } catch (err) {\r\n        return res.status(500).json({err: err.message})\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,SAAS,MAAM,0BAA0B;AAChD,OAAOC,UAAU,MAAM,iCAAiC;AACxD,OAAOC,IAAI,MAAM,0BAA0B;AAE3CF,SAAS,EAAE;AAEX,gBAAe,OAAOG,GAAG,EAAEC,GAAG,KAAK;EAC/B,QAAOD,GAAG,CAACE,MAAM;IACb,KAAK,MAAM;MACP,MAAMC,cAAc,CAACH,GAAG,EAAEC,GAAG,CAAC;MAC9B;IACJ,KAAK,KAAK;MACN,MAAMG,aAAa,CAACJ,GAAG,EAAEC,GAAG,CAAC;MAC7B;EAAM;AAElB,CAAC;AAED,MAAME,cAAc,GAAG,OAAOH,GAAG,EAAEC,GAAG,KAAK;EACvC,IAAI;IACA,MAAMI,MAAM,GAAG,MAAMN,IAAI,CAACC,GAAG,EAAEC,GAAG,CAAC;IACnC,IAAGI,MAAM,CAACC,IAAI,KAAK,OAAO,EAC1B,OAAOL,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAACC,GAAG,EAAE;IAA8B,CAAC,CAAC;IAElE,MAAM;MAAEC;IAAK,CAAC,GAAGV,GAAG,CAACW,IAAI;IACzB,IAAG,CAACD,IAAI,EAAE,OAAOT,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAACC,GAAG,EAAE;IAA6B,CAAC,CAAC;IAE3E,MAAMG,WAAW,GAAG,IAAId,UAAU,CAAC;MAACY;IAAI,CAAC,CAAC;IAE1C,MAAME,WAAW,CAACC,IAAI,EAAE;IACxBZ,GAAG,CAACO,IAAI,CAAC;MACLM,GAAG,EAAE,kCAAkC;MACvCF;IACJ,CAAC,CAAC;EAEN,CAAC,CAAC,OAAOH,GAAG,EAAE;IACV,OAAOR,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAACC,GAAG,EAAEA,GAAG,CAACM;IAAO,CAAC,CAAC;EACnD;AACJ,CAAC;AAED,MAAMX,aAAa,GAAG,OAAOJ,GAAG,EAAEC,GAAG,KAAK;EACtC,IAAI;IACA,MAAMe,UAAU,GAAG,MAAMlB,UAAU,CAACmB,IAAI,EAAE;IAE1ChB,GAAG,CAACO,IAAI,CAAC;MAACQ;IAAU,CAAC,CAAC;EAE1B,CAAC,CAAC,OAAOP,GAAG,EAAE;IACV,OAAOR,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAACC,GAAG,EAAEA,GAAG,CAACM;IAAO,CAAC,CAAC;EACnD;AACJ,CAAC"},"metadata":{},"sourceType":"module"}