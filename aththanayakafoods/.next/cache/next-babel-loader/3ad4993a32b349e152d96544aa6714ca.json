{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gihanmadhuwantha\\\\Desktop\\\\system_Development\\\\AththanayakaFoods\\\\aththanayakafoods\\\\pages\\\\paypalBtn.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useContext } from 'react';\nimport { postData } from '../utils/fetchData';\nimport { DataContext } from '../store/GlobalState';\nimport { updateItem } from '../store/Actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar paypalBtn = function paypalBtn(_ref) {\n  _s();\n  var total = _ref.total,\n    address = _ref.address,\n    mobile = _ref.mobile,\n    state = _ref.state,\n    dispatch = _ref.dispatch;\n  var refPaypalBtn = useRef();\n  var cart = state.cart,\n    auth = state.auth;\n  useEffect(function () {\n    paypal.Buttons({\n      createOrder: function createOrder(data, actions) {\n        // This function sets up the details of the transaction, including the amount and line item details.\n        return actions.order.create({\n          purchase_units: [{\n            amount: {\n              value: total\n            }\n          }]\n        });\n      },\n      onApprove: function onApprove(data, actions) {\n        // This function captures the funds from the transaction.\n        //dispatch({ type: 'NOTIFY', payload: {loading: true} })\n\n        return actions.order.capture().then(function (details) {\n          postData('order', {\n            address: address,\n            mobile: mobile,\n            cart: cart,\n            total: total\n          }, auth.token).then(function (res) {\n            if (res.err) return dispatch({\n              type: 'NOTIFY',\n              payload: {\n                error: res.err\n              }\n            });\n          });\n          dispatch({\n            type: 'ADD_CART',\n            payload: []\n          });\n          return dispatch({\n            type: 'NOTIFY',\n            payload: {\n              error: res.err\n            }\n          });\n        });\n      }\n    }).render(refPaypalBtn.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: refPaypalBtn\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, _this);\n};\n_s(paypalBtn, \"rI7E1oL4eqSVL08CSIq5ewwS+zk=\");\nexport default paypalBtn;","map":{"version":3,"names":["useEffect","useRef","useContext","postData","DataContext","updateItem","paypalBtn","total","address","mobile","state","dispatch","refPaypalBtn","cart","auth","paypal","Buttons","createOrder","data","actions","order","create","purchase_units","amount","value","onApprove","capture","then","details","token","res","err","type","payload","error","render","current"],"sources":["C:/Users/gihanmadhuwantha/Desktop/system_Development/AththanayakaFoods/aththanayakafoods/pages/paypalBtn.js"],"sourcesContent":["import { useEffect, useRef, useContext } from 'react'\r\nimport { postData } from '../utils/fetchData'\r\nimport {DataContext} from '../store/GlobalState'\r\nimport {updateItem} from '../store/Actions'\r\n\r\nconst paypalBtn = ({total,address,mobile,state,dispatch}) => {\r\n    const refPaypalBtn = useRef()\r\n    const{cart,auth}=state\r\n    useEffect(() => {\r\n      paypal.Buttons({\r\n          createOrder: function(data, actions) {\r\n            // This function sets up the details of the transaction, including the amount and line item details.\r\n            return actions.order.create({\r\n              purchase_units: [{\r\n                amount: {\r\n                  value:total\r\n                }\r\n              }]\r\n            });\r\n          },\r\n          onApprove: function(data, actions) {\r\n            // This function captures the funds from the transaction.\r\n            //dispatch({ type: 'NOTIFY', payload: {loading: true} })\r\n\r\n            return actions.order.capture().then(function(details) {\r\n\r\n             postData('order',{address,mobile,cart,total},auth.token).\r\n             then(res=>{ if(res.err) return dispatch({ type: 'NOTIFY', payload: {error: res.err} })})\r\n             dispatch({type:'ADD_CART',payload:[]})\r\n             return dispatch({ type: 'NOTIFY', payload: {error: res.err} })\r\n            });\r\n          }\r\n      }).render(refPaypalBtn.current);\r\n  },[])\r\n    return(\r\n        <div ref={refPaypalBtn}></div>\r\n    )\r\n    \r\n    }\r\nexport default paypalBtn "],"mappings":";;;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,UAAU,QAAQ,OAAO;AACrD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAAQC,WAAW,QAAO,sBAAsB;AAChD,SAAQC,UAAU,QAAO,kBAAkB;AAAA;AAE3C,IAAMC,SAAS,GAAG,SAAZA,SAAS,OAA8C;EAAA;EAAA,IAAzCC,KAAK,QAALA,KAAK;IAACC,OAAO,QAAPA,OAAO;IAACC,MAAM,QAANA,MAAM;IAACC,KAAK,QAALA,KAAK;IAACC,QAAQ,QAARA,QAAQ;EACnD,IAAMC,YAAY,GAAGX,MAAM,EAAE;EAC7B,IAAMY,IAAI,GAAOH,KAAK,CAAhBG,IAAI;IAACC,IAAI,GAAEJ,KAAK,CAAXI,IAAI;EACfd,SAAS,CAAC,YAAM;IACde,MAAM,CAACC,OAAO,CAAC;MACXC,WAAW,EAAE,qBAASC,IAAI,EAAEC,OAAO,EAAE;QACnC;QACA,OAAOA,OAAO,CAACC,KAAK,CAACC,MAAM,CAAC;UAC1BC,cAAc,EAAE,CAAC;YACfC,MAAM,EAAE;cACNC,KAAK,EAACjB;YACR;UACF,CAAC;QACH,CAAC,CAAC;MACJ,CAAC;MACDkB,SAAS,EAAE,mBAASP,IAAI,EAAEC,OAAO,EAAE;QACjC;QACA;;QAEA,OAAOA,OAAO,CAACC,KAAK,CAACM,OAAO,EAAE,CAACC,IAAI,CAAC,UAASC,OAAO,EAAE;UAErDzB,QAAQ,CAAC,OAAO,EAAC;YAACK,OAAO,EAAPA,OAAO;YAACC,MAAM,EAANA,MAAM;YAACI,IAAI,EAAJA,IAAI;YAACN,KAAK,EAALA;UAAK,CAAC,EAACO,IAAI,CAACe,KAAK,CAAC,CACxDF,IAAI,CAAC,UAAAG,GAAG,EAAE;YAAE,IAAGA,GAAG,CAACC,GAAG,EAAE,OAAOpB,QAAQ,CAAC;cAAEqB,IAAI,EAAE,QAAQ;cAAEC,OAAO,EAAE;gBAACC,KAAK,EAAEJ,GAAG,CAACC;cAAG;YAAE,CAAC,CAAC;UAAA,CAAC,CAAC;UACxFpB,QAAQ,CAAC;YAACqB,IAAI,EAAC,UAAU;YAACC,OAAO,EAAC;UAAE,CAAC,CAAC;UACtC,OAAOtB,QAAQ,CAAC;YAAEqB,IAAI,EAAE,QAAQ;YAAEC,OAAO,EAAE;cAACC,KAAK,EAAEJ,GAAG,CAACC;YAAG;UAAE,CAAC,CAAC;QAC/D,CAAC,CAAC;MACJ;IACJ,CAAC,CAAC,CAACI,MAAM,CAACvB,YAAY,CAACwB,OAAO,CAAC;EACnC,CAAC,EAAC,EAAE,CAAC;EACH,oBACI;IAAK,GAAG,EAAExB;EAAa;IAAA;IAAA;IAAA;EAAA,SAAO;AAGlC,CAAC;AAAA,GAjCCN,SAAS;AAkCf,eAAeA,SAAS"},"metadata":{},"sourceType":"module"}