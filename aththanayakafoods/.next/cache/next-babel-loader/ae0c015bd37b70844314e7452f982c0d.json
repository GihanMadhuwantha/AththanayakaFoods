{"ast":null,"code":"import connectDB from '../../../../utils/connectDB';\nimport Orders from '../../../../models/orderModel';\nimport auth from '../../../../middleware/auth';\nconnectDB();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"PATCH\":\n      await paymentOrder(req, res);\n      break;\n  }\n});\nconst paymentOrder = async (req, res) => {\n  try {\n    const result = await auth(req, res);\n    if (result.role === 'user') {\n      const {\n        id\n      } = req.query;\n      const {\n        paymentId\n      } = req.body;\n      await Orders.findOneAndUpdate({\n        _id: id\n      }, {\n        paid: true,\n        dateOfPayment: new Date().toISOString(),\n        paymentId,\n        method: 'Paypal'\n      });\n      res.json({\n        msg: 'Payment success!'\n      });\n    }\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};","map":{"version":3,"names":["connectDB","Orders","auth","req","res","method","paymentOrder","result","role","id","query","paymentId","body","findOneAndUpdate","_id","paid","dateOfPayment","Date","toISOString","json","msg","err","status","message"],"sources":["C:/Users/gihanmadhuwantha/Desktop/system_Development/AththanayakaFoods/aththanayakafoods/pages/api/order/payment/[id].js"],"sourcesContent":["import connectDB from '../../../../utils/connectDB'\r\nimport Orders from '../../../../models/orderModel'\r\nimport auth from '../../../../middleware/auth'\r\nconnectDB()\r\n\r\nexport default async (req, res) => {\r\n    switch(req.method){\r\n        case \"PATCH\":\r\n            await paymentOrder(req, res)\r\n            break;\r\n    }\r\n}\r\nconst paymentOrder = async(req, res) => {\r\n    try {\r\n        const result = await auth(req, res)\r\n        \r\n        if(result.role === 'user'){\r\n            const {id} = req.query\r\n            const { paymentId } = req.body\r\n    \r\n            await Orders.findOneAndUpdate({_id: id}, {\r\n                paid: true, dateOfPayment: new Date().toISOString(), paymentId, method: 'Paypal'\r\n             \r\n            })\r\n    \r\n            res.json({msg: 'Payment success!'})\r\n        }\r\n        \r\n    } catch (err) {\r\n        return res.status(500).json({err: err.message})\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,SAAS,MAAM,6BAA6B;AACnD,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAOC,IAAI,MAAM,6BAA6B;AAC9CF,SAAS,EAAE;AAEX,gBAAe,OAAOG,GAAG,EAAEC,GAAG,KAAK;EAC/B,QAAOD,GAAG,CAACE,MAAM;IACb,KAAK,OAAO;MACR,MAAMC,YAAY,CAACH,GAAG,EAAEC,GAAG,CAAC;MAC5B;EAAM;AAElB,CAAC;AACD,MAAME,YAAY,GAAG,OAAMH,GAAG,EAAEC,GAAG,KAAK;EACpC,IAAI;IACA,MAAMG,MAAM,GAAG,MAAML,IAAI,CAACC,GAAG,EAAEC,GAAG,CAAC;IAEnC,IAAGG,MAAM,CAACC,IAAI,KAAK,MAAM,EAAC;MACtB,MAAM;QAACC;MAAE,CAAC,GAAGN,GAAG,CAACO,KAAK;MACtB,MAAM;QAAEC;MAAU,CAAC,GAAGR,GAAG,CAACS,IAAI;MAE9B,MAAMX,MAAM,CAACY,gBAAgB,CAAC;QAACC,GAAG,EAAEL;MAAE,CAAC,EAAE;QACrCM,IAAI,EAAE,IAAI;QAAEC,aAAa,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;QAAEP,SAAS;QAAEN,MAAM,EAAE;MAE5E,CAAC,CAAC;MAEFD,GAAG,CAACe,IAAI,CAAC;QAACC,GAAG,EAAE;MAAkB,CAAC,CAAC;IACvC;EAEJ,CAAC,CAAC,OAAOC,GAAG,EAAE;IACV,OAAOjB,GAAG,CAACkB,MAAM,CAAC,GAAG,CAAC,CAACH,IAAI,CAAC;MAACE,GAAG,EAAEA,GAAG,CAACE;IAAO,CAAC,CAAC;EACnD;AACJ,CAAC"},"metadata":{},"sourceType":"module"}