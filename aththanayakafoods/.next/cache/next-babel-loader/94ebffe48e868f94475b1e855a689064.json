{"ast":null,"code":"import connectDB from '../../../utils/connectDB';\nimport Products from '../../../models/productModel';\nimport auth from '../../../middleware/auth';\nconnectDB();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"GET\":\n      await getProduct(req, res);\n      break;\n    case \"PUT\":\n      await updateProduct(req, res);\n      break;\n  }\n});\nconst getProduct = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.query;\n    const product = await Products.findById(id);\n    if (!product) return res.status(400).json({\n      err: 'This product does not exist.'\n    });\n    res.json({\n      product\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};\nconst updateProduct = async (req, res) => {\n  try {\n    const result = await auth(req, res);\n    if (result.role !== 'admin') return res.status(400).json({\n      err: 'Authentication is not valid.'\n    });\n    const {\n      id\n    } = req.query;\n    const {\n      title,\n      price,\n      inStock,\n      description,\n      content,\n      category,\n      images\n    } = req.body;\n    if (!title || !price || !inStock || !description || !content || category === 'all' || images.length === 0) return res.status(400).json({\n      err: 'Please add all the fields.'\n    });\n    await Products.findOneAndUpdate({\n      _id: id\n    }, {\n      title: title.toLowerCase(),\n      price,\n      inStock,\n      description,\n      content,\n      category,\n      images\n    });\n    res.json({\n      msg: 'Success! Updated a product'\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};","map":{"version":3,"names":["connectDB","Products","auth","req","res","method","getProduct","updateProduct","id","query","product","findById","status","json","err","message","result","role","title","price","inStock","description","content","category","images","body","length","findOneAndUpdate","_id","toLowerCase","msg"],"sources":["C:/Users/gihanmadhuwantha/Desktop/system_Development/AththanayakaFoods/aththanayakafoods/pages/api/product/[id].js"],"sourcesContent":["import connectDB from '../../../utils/connectDB'\r\nimport Products from '../../../models/productModel'\r\nimport auth from '../../../middleware/auth'\r\n\r\nconnectDB()\r\nexport default async(req,res)=>{\r\n switch(req.method){\r\n    case \"GET\":\r\n        await getProduct (req,res)\r\n        break;\r\n    case \"PUT\":\r\n        await updateProduct(req, res)\r\n        break;\r\n\r\n }\r\n\r\n}\r\nconst getProduct = async (req, res) => {\r\n    try {\r\n        const { id } = req.query;\r\n        \r\n        const product = await Products.findById(id)\r\n       \r\n        if(!product) return res.status(400).json({err: 'This product does not exist.'})\r\n        \r\n        res.json({ product })\r\n\r\n    } catch (err) {\r\n        return res.status(500).json({err: err.message})\r\n    }\r\n}\r\nconst updateProduct = async (req, res) => {\r\n    try {\r\n        const result = await auth(req, res)\r\n        if(result.role !== 'admin') \r\n        return res.status(400).json({err: 'Authentication is not valid.'})\r\n\r\n        const {id} = req.query\r\n        const {title, price, inStock, description, content, category, images} = req.body\r\n\r\n        if(!title || !price || !inStock || !description || !content || category === 'all' || images.length === 0)\r\n        return res.status(400).json({err: 'Please add all the fields.'})\r\n\r\n        await Products.findOneAndUpdate({_id: id}, {\r\n            title: title.toLowerCase(), price, inStock, description, content, category, images\r\n        })\r\n\r\n        res.json({msg: 'Success! Updated a product'})\r\n    } catch (err) {\r\n        return res.status(500).json({err: err.message})\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,0BAA0B;AAChD,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,IAAI,MAAM,0BAA0B;AAE3CF,SAAS,EAAE;AACX,gBAAe,OAAMG,GAAG,EAACC,GAAG,KAAG;EAC9B,QAAOD,GAAG,CAACE,MAAM;IACd,KAAK,KAAK;MACN,MAAMC,UAAU,CAAEH,GAAG,EAACC,GAAG,CAAC;MAC1B;IACJ,KAAK,KAAK;MACN,MAAMG,aAAa,CAACJ,GAAG,EAAEC,GAAG,CAAC;MAC7B;EAAM;AAId,CAAC;AACD,MAAME,UAAU,GAAG,OAAOH,GAAG,EAAEC,GAAG,KAAK;EACnC,IAAI;IACA,MAAM;MAAEI;IAAG,CAAC,GAAGL,GAAG,CAACM,KAAK;IAExB,MAAMC,OAAO,GAAG,MAAMT,QAAQ,CAACU,QAAQ,CAACH,EAAE,CAAC;IAE3C,IAAG,CAACE,OAAO,EAAE,OAAON,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAACC,GAAG,EAAE;IAA8B,CAAC,CAAC;IAE/EV,GAAG,CAACS,IAAI,CAAC;MAAEH;IAAQ,CAAC,CAAC;EAEzB,CAAC,CAAC,OAAOI,GAAG,EAAE;IACV,OAAOV,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAACC,GAAG,EAAEA,GAAG,CAACC;IAAO,CAAC,CAAC;EACnD;AACJ,CAAC;AACD,MAAMR,aAAa,GAAG,OAAOJ,GAAG,EAAEC,GAAG,KAAK;EACtC,IAAI;IACA,MAAMY,MAAM,GAAG,MAAMd,IAAI,CAACC,GAAG,EAAEC,GAAG,CAAC;IACnC,IAAGY,MAAM,CAACC,IAAI,KAAK,OAAO,EAC1B,OAAOb,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAACC,GAAG,EAAE;IAA8B,CAAC,CAAC;IAElE,MAAM;MAACN;IAAE,CAAC,GAAGL,GAAG,CAACM,KAAK;IACtB,MAAM;MAACS,KAAK;MAAEC,KAAK;MAAEC,OAAO;MAAEC,WAAW;MAAEC,OAAO;MAAEC,QAAQ;MAAEC;IAAM,CAAC,GAAGrB,GAAG,CAACsB,IAAI;IAEhF,IAAG,CAACP,KAAK,IAAI,CAACC,KAAK,IAAI,CAACC,OAAO,IAAI,CAACC,WAAW,IAAI,CAACC,OAAO,IAAIC,QAAQ,KAAK,KAAK,IAAIC,MAAM,CAACE,MAAM,KAAK,CAAC,EACxG,OAAOtB,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAACC,GAAG,EAAE;IAA4B,CAAC,CAAC;IAEhE,MAAMb,QAAQ,CAAC0B,gBAAgB,CAAC;MAACC,GAAG,EAAEpB;IAAE,CAAC,EAAE;MACvCU,KAAK,EAAEA,KAAK,CAACW,WAAW,EAAE;MAAEV,KAAK;MAAEC,OAAO;MAAEC,WAAW;MAAEC,OAAO;MAAEC,QAAQ;MAAEC;IAChF,CAAC,CAAC;IAEFpB,GAAG,CAACS,IAAI,CAAC;MAACiB,GAAG,EAAE;IAA4B,CAAC,CAAC;EACjD,CAAC,CAAC,OAAOhB,GAAG,EAAE;IACV,OAAOV,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAACC,GAAG,EAAEA,GAAG,CAACC;IAAO,CAAC,CAAC;EACnD;AACJ,CAAC"},"metadata":{},"sourceType":"module"}